{
  "description": "PolicyAutomation is the Schema for the policyautomations API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "policy.open-cluster-management.io/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "PolicyAutomation"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    },
    "spec": {
      "description": "PolicyAutomationSpec defines the desired state of PolicyAutomation",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "automationDef",
        "mode",
        "policyRef"
      ],
      "properties": {
        "automationDef": {
          "description": "AutomationDef defines the automation to invoke",
          "type": "object",
          "required": [
            "name",
            "secret"
          ],
          "properties": {
            "extra_vars": {
              "description": "ExtraVars is passed to the Ansible job at execution time and is a known Ansible entity.",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "name": {
              "description": "Name of the Ansible Template to run in Tower as a job",
              "type": "string",
              "minLength": 1
            },
            "secret": {
              "type": "string",
              "minLength": 1
            },
            "type": {
              "description": "Type of the automation to invoke",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "eventHook": {
          "description": "EventHook decides when automation is going to be triggered",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "noncompliant"
          ]
        },
        "mode": {
          "description": "Mode decides how automation is going to be triggered",
          "type": "string",
          "enum": [
            "once",
            "disabled"
          ]
        },
        "policyRef": {
          "description": "PolicyRef is the name of the policy automation is going to binding with.",
          "type": "string"
        },
        "rescanAfter": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "PolicyAutomationStatus defines the observed state of PolicyAutomation",
      "type": [
        "object",
        "null"
      ]
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "policy.open-cluster-management.io",
      "kind": "PolicyAutomation",
      "version": "v1beta1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}