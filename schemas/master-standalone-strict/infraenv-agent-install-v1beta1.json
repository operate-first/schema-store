{
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "agent-install.openshift.io/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "InfraEnv"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    },
    "spec": {
      "type": [
        "object",
        "null"
      ],
      "required": [
        "pullSecretRef"
      ],
      "properties": {
        "additionalNTPSources": {
          "description": "AdditionalNTPSources is a list of NTP sources (hostname or IP) to be added to all cluster hosts. They are added to any NTP sources that were configured through other means.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "agentLabels": {
          "description": "AgentLabels lists labels to apply to Agents that are associated with this InfraEnv upon the creation of the Agents.",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "clusterRef": {
          "description": "ClusterRef is the reference to the single ClusterDeployment that will be installed from this InfraEnv. Future versions will allow for multiple ClusterDeployments and this reference will be removed.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "name": {
              "description": "Name is unique within a namespace to reference a cluster resource.",
              "type": [
                "string",
                "null"
              ]
            },
            "namespace": {
              "description": "Namespace defines the space within which the cluster name must be unique.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "cpuArchitecture": {
          "description": "CpuArchitecture specifies the target CPU architecture. Default is x86_64",
          "type": [
            "string",
            "null"
          ]
        },
        "ignitionConfigOverride": {
          "description": "Json formatted string containing the user overrides for the initial ignition config",
          "type": [
            "string",
            "null"
          ]
        },
        "nmStateConfigLabelSelector": {
          "description": "NmstateConfigLabelSelector associates NMStateConfigs for hosts that are considered part of this installation environment.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "additionalProperties": false
        },
        "proxy": {
          "description": "Proxy defines the proxy settings for agents and clusters that use the InfraEnv. If unset, the agents and clusters will not be configured to use a proxy.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "httpProxy": {
              "description": "HTTPProxy is the URL of the proxy for HTTP requests.",
              "type": [
                "string",
                "null"
              ]
            },
            "httpsProxy": {
              "description": "HTTPSProxy is the URL of the proxy for HTTPS requests.",
              "type": [
                "string",
                "null"
              ]
            },
            "noProxy": {
              "description": "NoProxy is a comma-separated list of domains and CIDRs for which the proxy should not be used.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "pullSecretRef": {
          "description": "PullSecretRef is the reference to the secret to use when pulling images.",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "sshAuthorizedKey": {
          "description": "SSHAuthorizedKey is a SSH public keys that will be added to all agents for use in debugging.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "agentLabelSelector": {
          "description": "AgentLabelSelector specifies the label that will be applied to Agents that boot from the installation media of this InfraEnv. This is how a user would identify which agents are associated with a particular InfraEnv.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "additionalProperties": false
        },
        "bootArtifacts": {
          "description": "BootArtifacts specifies the URLs for each boot artifact",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "initrd": {
              "description": "InitrdURL specifies an HTTP/S URL that contains the initrd",
              "type": [
                "string",
                "null"
              ]
            },
            "ipxeScript": {
              "description": "IpxeScriptURL specifies an HTTP/S URL that contains the iPXE script",
              "type": [
                "string",
                "null"
              ]
            },
            "kernel": {
              "description": "KernelURL specifies an HTTP/S URL that contains the kernel",
              "type": [
                "string",
                "null"
              ]
            },
            "rootfs": {
              "description": "RootfsURL specifies an HTTP/S URL that contains the rootfs",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Condition represents the state of the operator's reconciliation functionality.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastHeartbeatTime": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "lastTransitionTime": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "message": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "type": "string"
              },
              "type": {
                "description": "ConditionType is the state of the operator's reconciliation functionality.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "createdTime": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "debugInfo": {
          "description": "InfraEnvDebugInfo includes information for debugging the installation process.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "eventsURL": {
              "description": "EventsURL specifies an HTTP/S URL that contains InfraEnv events",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "isoDownloadURL": {
          "description": "ISODownloadURL specifies an HTTP/S URL that contains a discovery ISO containing the configuration from this InfraEnv.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "agent-install.openshift.io",
      "kind": "InfraEnv",
      "version": "v1beta1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}