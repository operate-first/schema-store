{
  "description": "FybrikApplication provides information about the application whose data is being operated on, the nature of the processing, and the data sets chosen for processing by the application. The FybrikApplication controller obtains instructions regarding any governance related changes that must be performed on the data, identifies the modules capable of performing such changes, and finally generates the Plotter which defines the secure runtime environment and all the components in it.  This runtime environment provides the application with access to the data requested in a secure manner and without having to provide any credentials for the data sets.  The credentials are obtained automatically by the manager from the credential management system.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "app.fybrik.io/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "FybrikApplication"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    },
    "spec": {
      "description": "FybrikApplicationSpec defines data flows needed by the application, the purpose and other contextual information about the application.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "appInfo",
        "data"
      ],
      "properties": {
        "appInfo": {
          "description": "AppInfo contains information describing the reasons for the processing that will be done by the application.",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "data": {
          "description": "Data contains the identifiers of the data to be used by the Data Scientist's application, and the protocol used to access it and the format expected.",
          "type": "array",
          "items": {
            "description": "DataContext indicates data set being processed by the workload and includes information about the data format and technologies used to access the data.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "dataSetID",
              "requirements"
            ],
            "properties": {
              "dataSetID": {
                "description": "DataSetID is a unique identifier of the dataset chosen from the data catalog. For data catalogs that support multiple sub-catalogs, it includes the catalog id and the dataset id. When writing a new dataset it is the name provided by the user or workload generating it.",
                "type": "string",
                "minLength": 1
              },
              "flow": {
                "description": "Flows indicates what is being done with the particular dataset - ex: read, write, copy (ingest), delete This is optional for the purpose of backward compatibility. If nothing is provided, read is assumed.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "read",
                  "write",
                  "delete",
                  "copy"
                ]
              },
              "requirements": {
                "description": "Requirements from the system",
                "type": "object",
                "properties": {
                  "flowParams": {
                    "description": "FlowParams include the requirements for particular data flows",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "catalog": {
                        "description": "Catalog indicates that the data asset must be cataloged, and in which catalog to register it",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "isNewDataSet": {
                        "description": "IsNewDataSet if true indicates that the DataContext.DataSetID is user provided and not a full catalog / dataset ID. Relevant when writing. A unique ID from the catalog will be provided in the FybrikApplication Status after a new catalog entry is created.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "metadata": {
                        "description": "Source asset metadata like asset name, owner, geography, etc Relevant when writing new asset.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "columns": {
                            "description": "Columns associated with the asset",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "description": "ResourceColumn represents a column in a tabular resource",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the column",
                                  "type": "string"
                                },
                                "tags": {
                                  "description": "Tags associated with the column",
                                  "x-kubernetes-preserve-unknown-fields": true
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "geography": {
                            "description": "Geography of the resource",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "name": {
                            "description": "Name of the resource",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "owner": {
                            "description": "Owner of the resource",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "tags": {
                            "description": "Tags associated with the asset",
                            "x-kubernetes-preserve-unknown-fields": true
                          }
                        },
                        "additionalProperties": false
                      },
                      "storageEstimate": {
                        "description": "Storage estimate indicates the estimated amount of storage in MB, GB, TB required when writing new data.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int64"
                      }
                    },
                    "additionalProperties": false
                  },
                  "interface": {
                    "description": "Interface indicates the protocol and format expected by the data user",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "protocol"
                    ],
                    "properties": {
                      "dataformat": {
                        "description": "DataFormat defines the data format type",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "protocol": {
                        "description": "Protocol defines the interface protocol used for data transactions",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "secretRef": {
          "description": "SecretRef points to the secret that holds credentials for each system the user has been authenticated with. The secret is deployed in FybrikApplication namespace.",
          "type": [
            "string",
            "null"
          ]
        },
        "selector": {
          "description": "Selector enables to connect the resource to the application Application labels should match the labels in the selector.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "workloadSelector"
          ],
          "properties": {
            "clusterName": {
              "description": "Cluster name",
              "type": [
                "string",
                "null"
              ]
            },
            "workloadSelector": {
              "description": "WorkloadSelector enables to connect the resource to the application Application labels should match the labels in the selector.",
              "type": "object",
              "properties": {
                "matchExpressions": {
                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "key",
                      "operator"
                    ],
                    "properties": {
                      "key": {
                        "description": "key is the label key that the selector applies to.",
                        "type": "string"
                      },
                      "operator": {
                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                        "type": "string"
                      },
                      "values": {
                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "matchLabels": {
                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "FybrikApplicationStatus defines the observed state of FybrikApplication.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "assetStates": {
          "description": "AssetStates provides a status per asset",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "description": "AssetState defines the observed state of an asset",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "catalogedAsset": {
                "description": "CatalogedAsset provides a new asset identifier after being registered in the enterprise catalog",
                "type": [
                  "string",
                  "null"
                ]
              },
              "conditions": {
                "description": "Conditions indicate the asset state (Ready, Deny, Error)",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "Condition describes the state of a FybrikApplication at a certain point.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "message": {
                      "description": "Message contains the details of the current condition",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "observedGeneration": {
                      "description": "ObservedGeneration is the version of the resource for which the condition has been evaluated",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int64"
                    },
                    "status": {
                      "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "True",
                        "False",
                        "Unknown"
                      ]
                    },
                    "type": {
                      "description": "Type of the condition",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "endpoint": {
                "description": "Endpoint provides the endpoint spec from which the asset will be served to the application",
                "required": [
                  "name"
                ],
                "x-kubernetes-preserve-unknown-fields": true
              }
            },
            "additionalProperties": false
          }
        },
        "errorMessage": {
          "description": "ErrorMessage indicates that an error has happened during the reconcile, unrelated to a specific asset",
          "type": [
            "string",
            "null"
          ]
        },
        "generated": {
          "description": "Generated resource identifier",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "appVersion",
            "kind",
            "name",
            "namespace"
          ],
          "properties": {
            "appVersion": {
              "description": "Version of FybrikApplication that has generated this resource",
              "type": "integer",
              "format": "int64"
            },
            "kind": {
              "description": "Kind of the resource (Blueprint, Plotter)",
              "type": "string"
            },
            "name": {
              "description": "Name of the resource",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the resource",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "observedGeneration": {
          "description": "ObservedGeneration is taken from the FybrikApplication metadata.  This is used to determine during reconcile whether reconcile was called because the desired state changed, or whether the Blueprint status changed.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "provisionedStorage": {
          "description": "ProvisionedStorage maps a dataset (identified by AssetID) to the new provisioned bucket. It allows FybrikApplication controller to manage buckets in case the spec has been modified, an error has occurred, or a delete event has been received. ProvisionedStorage has the information required to register the dataset once the owned plotter resource is ready",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "description": "DatasetDetails holds details of the provisioned storage",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "datasetRef": {
                "description": "Reference to a Dataset resource containing the request to provision storage",
                "type": [
                  "string",
                  "null"
                ]
              },
              "details": {
                "description": "Dataset information",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "connection"
                ],
                "properties": {
                  "connection": {
                    "description": "Connection has the relevant details for accesing the data (url, table, ssl, etc.)",
                    "required": [
                      "name"
                    ],
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "format": {
                    "description": "Format represents data format (e.g. parquet) as received from catalog connectors",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "vault": {
                    "description": "Holds details for retrieving credentials by the modules from Vault store. It is a map so that different credentials can be stored for the different DataFlow operations.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {
                      "description": "Holds details for retrieving credentials from Vault store.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "address",
                        "authPath",
                        "role",
                        "secretPath"
                      ],
                      "properties": {
                        "address": {
                          "description": "Address is Vault address",
                          "type": "string"
                        },
                        "authPath": {
                          "description": "AuthPath is the path to auth method i.e. kubernetes",
                          "type": "string"
                        },
                        "role": {
                          "description": "Role is the Vault role used for retrieving the credentials",
                          "type": "string"
                        },
                        "secretPath": {
                          "description": "SecretPath is the path of the secret holding the Credentials in Vault",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              },
              "resourceMetadata": {
                "description": "Resource Metadata",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "columns": {
                    "description": "Columns associated with the asset",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "ResourceColumn represents a column in a tabular resource",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the column",
                          "type": "string"
                        },
                        "tags": {
                          "description": "Tags associated with the column",
                          "x-kubernetes-preserve-unknown-fields": true
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "geography": {
                    "description": "Geography of the resource",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "name": {
                    "description": "Name of the resource",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "owner": {
                    "description": "Owner of the resource",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "tags": {
                    "description": "Tags associated with the asset",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "additionalProperties": false
              },
              "secretRef": {
                "description": "Reference to a secret where the credentials are stored",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name",
                  "namespace"
                ],
                "properties": {
                  "name": {
                    "description": "Secret name",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Secret Namespace",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "ready": {
          "description": "Ready is true if all specified assets are either ready to be used or are denied access.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "validApplication": {
          "description": "ValidApplication indicates whether the FybrikApplication is valid given the defined taxonomy",
          "type": [
            "string",
            "null"
          ]
        },
        "validatedGeneration": {
          "description": "ValidatedGeneration is the version of the FyrbikApplication that has been validated with the taxonomy defined.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "app.fybrik.io",
      "kind": "FybrikApplication",
      "version": "v1beta1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}