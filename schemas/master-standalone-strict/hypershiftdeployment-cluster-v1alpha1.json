{
  "description": "HypershiftDeployment is the Schema for the hypershiftDeployments API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "cluster.open-cluster-management.io/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "HypershiftDeployment"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    },
    "spec": {
      "description": "HypershiftDeploymentSpec defines the desired state of HypershiftDeployment",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "hostingCluster",
        "infrastructure"
      ],
      "properties": {
        "credentials": {
          "description": "Credentials are ARN's that are used for standing up the resources in the cluster.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "aws": {
              "type": [
                "object",
                "null"
              ],
              "required": [
                "controlPlaneOperatorARN",
                "kubeCloudControllerARN",
                "nodePoolManagementARN"
              ],
              "properties": {
                "controlPlaneOperatorARN": {
                  "type": "string"
                },
                "kubeCloudControllerARN": {
                  "type": "string"
                },
                "nodePoolManagementARN": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "hostedClusterReference": {
          "description": "Reference to a HostedCluster on the HyperShift deployment namespace that will be applied to the ManagementCluster by ACM, if omitted, it will be generated required if InfraSpec.Configure is false",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "hostedClusterSpec": {
          "description": "HostedCluster that will be applied to the ManagementCluster by ACM, if omitted, it will be generated",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "networking",
            "platform",
            "pullSecret",
            "release",
            "services",
            "sshKey"
          ],
          "properties": {
            "additionalTrustBundle": {
              "description": "AdditionalTrustBundle is a reference to a ConfigMap containing a PEM-encoded X.509 certificate bundle that will be added to the hosted controlplane and nodes",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "auditWebhook": {
              "description": "AuditWebhook contains metadata for configuring an audit webhook endpoint for a cluster to process cluster audit events. It references a secret that contains the webhook information for the audit webhook endpoint. It is a secret because if the endpoint has mTLS the kubeconfig will contain client keys. The kubeconfig needs to be stored in the secret with a secret key name that corresponds to the constant AuditWebhookKubeconfigKey. \n This field is currently only supported on the IBMCloud platform.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "autoscaling": {
              "description": "Autoscaling specifies auto-scaling behavior that applies to all NodePools associated with the control plane.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "maxNodeProvisionTime": {
                  "description": "MaxNodeProvisionTime is the maximum time to wait for node provisioning before considering the provisioning to be unsuccessful, expressed as a Go duration string. The default is 15 minutes.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^([0-9]+(\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$"
                },
                "maxNodesTotal": {
                  "description": "MaxNodesTotal is the maximum allowable number of nodes across all NodePools for a HostedCluster. The autoscaler will not grow the cluster beyond this number.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32",
                  "minimum": 0
                },
                "maxPodGracePeriod": {
                  "description": "MaxPodGracePeriod is the maximum seconds to wait for graceful pod termination before scaling down a NodePool. The default is 600 seconds.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32",
                  "minimum": 0
                },
                "podPriorityThreshold": {
                  "description": "PodPriorityThreshold enables users to schedule \"best-effort\" pods, which shouldn't trigger autoscaler actions, but only run when there are spare resources available. The default is -10. \n See the following for more details: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#how-does-cluster-autoscaler-work-with-pod-priority-and-preemption",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                }
              },
              "additionalProperties": false
            },
            "clusterID": {
              "description": "ClusterID uniquely identifies this cluster. This is expected to be an RFC4122 UUID value (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx in hexadecimal values). As with a Kubernetes metadata.uid, this ID uniquely identifies this cluster in space and time. This value identifies the cluster in metrics pushed to telemetry and metrics produced by the control plane operators. If a value is not specified, an ID is generated. After initial creation, the value is immutable.",
              "type": [
                "string",
                "null"
              ],
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
            },
            "configuration": {
              "description": "Configuration specifies configuration for individual OCP components in the cluster, represented as embedded resources that correspond to the openshift configuration API.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "apiServer": {
                  "description": "APIServer holds configuration (like serving certificates, client CA and CORS domains) shared by all API servers in the system, among them especially kube-apiserver and openshift-apiserver.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "additionalCORSAllowedOrigins": {
                      "description": "additionalCORSAllowedOrigins lists additional, user-defined regular expressions describing hosts for which the API server allows access using the CORS headers. This may be needed to access the API and the integrated OAuth server from JavaScript applications. The values are regular expressions that correspond to the Golang regular expression language.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "audit": {
                      "description": "audit specifies the settings for audit configuration to be applied to all OpenShift-provided API servers in the cluster.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "customRules": {
                          "description": "customRules specify profiles per group. These profile take precedence over the top-level profile field if they apply. They are evaluation from top to bottom and the first one that matches, applies.",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "description": "AuditCustomRule describes a custom rule for an audit profile that takes precedence over the top-level profile.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "group",
                              "profile"
                            ],
                            "properties": {
                              "group": {
                                "description": "group is a name of group a request user must be member of in order to this profile to apply.",
                                "type": "string",
                                "minLength": 1
                              },
                              "profile": {
                                "description": "profile specifies the name of the desired audit policy configuration to be deployed to all OpenShift-provided API servers in the cluster. \n The following profiles are provided: - Default: the existing default policy. - WriteRequestBodies: like 'Default', but logs request and response HTTP payloads for write requests (create, update, patch). - AllRequestBodies: like 'WriteRequestBodies', but also logs request and response HTTP payloads for read requests (get, list). - None: no requests are logged at all, not even oauthaccesstokens and oauthauthorizetokens. \n If unset, the 'Default' profile is used as the default.",
                                "type": "string",
                                "enum": [
                                  "Default",
                                  "WriteRequestBodies",
                                  "AllRequestBodies",
                                  "None"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "x-kubernetes-list-map-keys": [
                            "group"
                          ],
                          "x-kubernetes-list-type": "map"
                        },
                        "profile": {
                          "description": "profile specifies the name of the desired top-level audit profile to be applied to all requests sent to any of the OpenShift-provided API servers in the cluster (kube-apiserver, openshift-apiserver and oauth-apiserver), with the exception of those requests that match one or more of the customRules. \n The following profiles are provided: - Default: default policy which means MetaData level logging with the exception of events   (not logged at all), oauthaccesstokens and oauthauthorizetokens (both logged at RequestBody   level). - WriteRequestBodies: like 'Default', but logs request and response HTTP payloads for write requests (create, update, patch). - AllRequestBodies: like 'WriteRequestBodies', but also logs request and response HTTP payloads for read requests (get, list). - None: no requests are logged at all, not even oauthaccesstokens and oauthauthorizetokens. \n Warning: It is not recommended to disable audit logging by using the `None` profile unless you are fully aware of the risks of not logging data that can be beneficial when troubleshooting issues. If you disable audit logging and a support situation arises, you might need to enable audit logging and reproduce the issue in order to troubleshoot properly. \n If unset, the 'Default' profile is used as the default.",
                          "type": [
                            "string",
                            "null"
                          ],
                          "enum": [
                            "Default",
                            "WriteRequestBodies",
                            "AllRequestBodies",
                            "None"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "clientCA": {
                      "description": "clientCA references a ConfigMap containing a certificate bundle for the signers that will be recognized for incoming client certificates in addition to the operator managed signers. If this is empty, then only operator managed signers are valid. You usually only have to set this if you have your own PKI you wish to honor client certificates from. The ConfigMap must exist in the openshift-config namespace and contain the following required fields: - ConfigMap.Data[\"ca-bundle.crt\"] - CA bundle.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "name is the metadata.name of the referenced config map",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "encryption": {
                      "description": "encryption allows the configuration of encryption of resources at the datastore layer.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "type": {
                          "description": "type defines what encryption type should be used to encrypt resources at the datastore layer. When this field is unset (i.e. when it is set to the empty string), identity is implied. The behavior of unset can and will change over time.  Even if encryption is enabled by default, the meaning of unset may change to a different encryption type based on changes in best practices. \n When encryption is enabled, all sensitive resources shipped with the platform are encrypted. This list of sensitive resources can and will change over time.  The current authoritative list is: \n   1. secrets   2. configmaps   3. routes.route.openshift.io   4. oauthaccesstokens.oauth.openshift.io   5. oauthauthorizetokens.oauth.openshift.io",
                          "type": [
                            "string",
                            "null"
                          ],
                          "enum": [
                            "",
                            "identity",
                            "aescbc"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "servingCerts": {
                      "description": "servingCert is the TLS cert info for serving secure traffic. If not specified, operator managed certificates will be used for serving secure traffic.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "namedCertificates": {
                          "description": "namedCertificates references secrets containing the TLS cert info for serving secure traffic to specific hostnames. If no named certificates are provided, or no named certificates match the server name as understood by a client, the defaultServingCertificate will be used.",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "description": "APIServerNamedServingCert maps a server DNS name, as understood by a client, to a certificate.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "names": {
                                "description": "names is a optional list of explicit DNS names (leading wildcards allowed) that should use this certificate to serve secure traffic. If no names are provided, the implicit names will be extracted from the certificates. Exact names trump over wildcard names. Explicit names defined here trump over extracted implicit names.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "servingCertificate": {
                                "description": "servingCertificate references a kubernetes.io/tls type secret containing the TLS cert info for serving secure traffic. The secret must exist in the openshift-config namespace and contain the following required fields: - Secret.Data[\"tls.key\"] - TLS private key. - Secret.Data[\"tls.crt\"] - TLS certificate.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "name is the metadata.name of the referenced secret",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "tlsSecurityProfile": {
                      "description": "tlsSecurityProfile specifies settings for TLS connections for externally exposed servers. \n If unset, a default (which may change between releases) is chosen. Note that only Old, Intermediate and Custom profiles are currently supported, and the maximum available MinTLSVersions is VersionTLS12.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "custom": {
                          "description": "custom is a user-defined TLS security profile. Be extremely careful using a custom profile as invalid configurations can be catastrophic. An example custom profile looks like this: \n   ciphers:     - ECDHE-ECDSA-CHACHA20-POLY1305     - ECDHE-RSA-CHACHA20-POLY1305     - ECDHE-RSA-AES128-GCM-SHA256     - ECDHE-ECDSA-AES128-GCM-SHA256   minTLSVersion: TLSv1.1"
                        },
                        "intermediate": {
                          "description": "intermediate is a TLS security profile based on: \n https://wiki.mozilla.org/Security/Server_Side_TLS#Intermediate_compatibility_.28recommended.29 \n and looks like this (yaml): \n   ciphers:     - TLS_AES_128_GCM_SHA256     - TLS_AES_256_GCM_SHA384     - TLS_CHACHA20_POLY1305_SHA256     - ECDHE-ECDSA-AES128-GCM-SHA256     - ECDHE-RSA-AES128-GCM-SHA256     - ECDHE-ECDSA-AES256-GCM-SHA384     - ECDHE-RSA-AES256-GCM-SHA384     - ECDHE-ECDSA-CHACHA20-POLY1305     - ECDHE-RSA-CHACHA20-POLY1305     - DHE-RSA-AES128-GCM-SHA256     - DHE-RSA-AES256-GCM-SHA384   minTLSVersion: TLSv1.2"
                        },
                        "modern": {
                          "description": "modern is a TLS security profile based on: \n https://wiki.mozilla.org/Security/Server_Side_TLS#Modern_compatibility \n and looks like this (yaml): \n   ciphers:     - TLS_AES_128_GCM_SHA256     - TLS_AES_256_GCM_SHA384     - TLS_CHACHA20_POLY1305_SHA256   minTLSVersion: TLSv1.3 \n NOTE: Currently unsupported."
                        },
                        "old": {
                          "description": "old is a TLS security profile based on: \n https://wiki.mozilla.org/Security/Server_Side_TLS#Old_backward_compatibility \n and looks like this (yaml): \n   ciphers:     - TLS_AES_128_GCM_SHA256     - TLS_AES_256_GCM_SHA384     - TLS_CHACHA20_POLY1305_SHA256     - ECDHE-ECDSA-AES128-GCM-SHA256     - ECDHE-RSA-AES128-GCM-SHA256     - ECDHE-ECDSA-AES256-GCM-SHA384     - ECDHE-RSA-AES256-GCM-SHA384     - ECDHE-ECDSA-CHACHA20-POLY1305     - ECDHE-RSA-CHACHA20-POLY1305     - DHE-RSA-AES128-GCM-SHA256     - DHE-RSA-AES256-GCM-SHA384     - DHE-RSA-CHACHA20-POLY1305     - ECDHE-ECDSA-AES128-SHA256     - ECDHE-RSA-AES128-SHA256     - ECDHE-ECDSA-AES128-SHA     - ECDHE-RSA-AES128-SHA     - ECDHE-ECDSA-AES256-SHA384     - ECDHE-RSA-AES256-SHA384     - ECDHE-ECDSA-AES256-SHA     - ECDHE-RSA-AES256-SHA     - DHE-RSA-AES128-SHA256     - DHE-RSA-AES256-SHA256     - AES128-GCM-SHA256     - AES256-GCM-SHA384     - AES128-SHA256     - AES256-SHA256     - AES128-SHA     - AES256-SHA     - DES-CBC3-SHA   minTLSVersion: TLSv1.0"
                        },
                        "type": {
                          "description": "type is one of Old, Intermediate, Modern or Custom. Custom provides the ability to specify individual TLS security profile parameters. Old, Intermediate and Modern are TLS security profiles based on: \n https://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_configurations \n The profiles are intent based, so they may change over time as new ciphers are developed and existing ciphers are found to be insecure.  Depending on precisely which ciphers are available to a process, the list may be reduced. \n Note that the Modern profile is currently not supported because it is not yet well adopted by common software libraries.",
                          "type": [
                            "string",
                            "null"
                          ],
                          "enum": [
                            "Old",
                            "Intermediate",
                            "Modern",
                            "Custom"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "authentication": {
                  "description": "Authentication specifies cluster-wide settings for authentication (like OAuth and webhook token authenticators).",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "oauthMetadata": {
                      "description": "oauthMetadata contains the discovery endpoint data for OAuth 2.0 Authorization Server Metadata for an external OAuth server. This discovery document can be viewed from its served location: oc get --raw '/.well-known/oauth-authorization-server' For further details, see the IETF Draft: https://tools.ietf.org/html/draft-ietf-oauth-discovery-04#section-2 If oauthMetadata.name is non-empty, this value has precedence over any metadata reference stored in status. The key \"oauthMetadata\" is used to locate the data. If specified and the config map or expected key is not found, no metadata is served. If the specified metadata is not valid, no metadata is served. The namespace for this config map is openshift-config.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "name is the metadata.name of the referenced config map",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "serviceAccountIssuer": {
                      "description": "serviceAccountIssuer is the identifier of the bound service account token issuer. The default is https://kubernetes.default.svc WARNING: Updating this field will result in the invalidation of all bound tokens with the previous issuer value. Unless the holder of a bound token has explicit support for a change in issuer, they will not request a new bound token until pod restart or until their existing token exceeds 80% of its duration.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "type": {
                      "description": "type identifies the cluster managed, user facing authentication mode in use. Specifically, it manages the component that responds to login attempts. The default is IntegratedOAuth.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "webhookTokenAuthenticator": {
                      "description": "webhookTokenAuthenticator configures a remote token reviewer. These remote authentication webhooks can be used to verify bearer tokens via the tokenreviews.authentication.k8s.io REST API. This is required to honor bearer tokens that are provisioned by an external authentication service.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "kubeConfig"
                      ],
                      "properties": {
                        "kubeConfig": {
                          "description": "kubeConfig references a secret that contains kube config file data which describes how to access the remote webhook service. The namespace for the referenced secret is openshift-config. \n For further details, see: \n https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication \n The key \"kubeConfig\" is used to locate the data. If the secret or expected key is not found, the webhook is not honored. If the specified kube config data is not valid, the webhook is not honored.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "name is the metadata.name of the referenced secret",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "webhookTokenAuthenticators": {
                      "description": "webhookTokenAuthenticators is DEPRECATED, setting it has no effect.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "deprecatedWebhookTokenAuthenticator holds the necessary configuration options for a remote token authenticator. It's the same as WebhookTokenAuthenticator but it's missing the 'required' validation on KubeConfig field.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "kubeConfig": {
                            "description": "kubeConfig contains kube config file data which describes how to access the remote webhook service. For further details, see: https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication The key \"kubeConfig\" is used to locate the data. If the secret or expected key is not found, the webhook is not honored. If the specified kube config data is not valid, the webhook is not honored. The namespace for this secret is determined by the point of use.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "name is the metadata.name of the referenced secret",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "configMapRefs": {
                  "description": "ConfigMapRefs holds references to any configmaps referenced by configuration entries. Entries can reference the configmaps using local object references. \n Deprecated This field is deprecated and will be removed in a future release",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "featureGate": {
                  "description": "FeatureGate holds cluster-wide information about feature gates.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "customNoUpgrade": {
                      "description": "customNoUpgrade allows the enabling or disabling of any feature. Turning this feature set on IS NOT SUPPORTED, CANNOT BE UNDONE, and PREVENTS UPGRADES. Because of its nature, this setting cannot be validated.  If you have any typos or accidentally apply invalid combinations your cluster may fail in an unrecoverable way.  featureSet must equal \"CustomNoUpgrade\" must be set to use this field."
                    },
                    "featureSet": {
                      "description": "featureSet changes the list of features in the cluster.  The default is empty.  Be very careful adjusting this setting. Turning on or off features may cause irreversible changes in your cluster which cannot be undone.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "image": {
                  "description": "Image governs policies related to imagestream imports and runtime configuration for external registries. It allows cluster admins to configure which registries OpenShift is allowed to import images from, extra CA trust bundles for external registries, and policies to block or allow registry hostnames. When exposing OpenShift's image registry to the public, this also lets cluster admins specify the external hostname.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "additionalTrustedCA": {
                      "description": "additionalTrustedCA is a reference to a ConfigMap containing additional CAs that should be trusted during imagestream import, pod image pull, build image pull, and imageregistry pullthrough. The namespace for this config map is openshift-config.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "name is the metadata.name of the referenced config map",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "allowedRegistriesForImport": {
                      "description": "allowedRegistriesForImport limits the container image registries that normal users may import images from. Set this list to the registries that you trust to contain valid Docker images and that you want applications to be able to import from. Users with permission to create Images or ImageStreamMappings via the API are not affected by this policy - typically only administrators or system integrations will have those permissions.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "RegistryLocation contains a location of the registry specified by the registry domain name. The domain name might include wildcards, like '*' or '??'.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "domainName": {
                            "description": "domainName specifies a domain name for the registry In case the registry use non-standard (80 or 443) port, the port should be included in the domain name as well.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "insecure": {
                            "description": "insecure indicates whether the registry is secure (https) or insecure (http) By default (if not specified) the registry is assumed as secure.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "externalRegistryHostnames": {
                      "description": "externalRegistryHostnames provides the hostnames for the default external image registry. The external hostname should be set only when the image registry is exposed externally. The first value is used in 'publicDockerImageRepository' field in ImageStreams. The value must be in \"hostname[:port]\" format.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "registrySources": {
                      "description": "registrySources contains configuration that determines how the container runtime should treat individual registries when accessing images for builds+pods. (e.g. whether or not to allow insecure access).  It does not contain configuration for the internal cluster registry.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "allowedRegistries": {
                          "description": "allowedRegistries are the only registries permitted for image pull and push actions. All other registries are denied. \n Only one of BlockedRegistries or AllowedRegistries may be set.",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "blockedRegistries": {
                          "description": "blockedRegistries cannot be used for image pull and push actions. All other registries are permitted. \n Only one of BlockedRegistries or AllowedRegistries may be set.",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "containerRuntimeSearchRegistries": {
                          "description": "containerRuntimeSearchRegistries are registries that will be searched when pulling images that do not have fully qualified domains in their pull specs. Registries will be searched in the order provided in the list. Note: this search list only works with the container runtime, i.e CRI-O. Will NOT work with builds or imagestream imports.",
                          "type": [
                            "array",
                            "null"
                          ],
                          "format": "hostname",
                          "minItems": 1,
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "insecureRegistries": {
                          "description": "insecureRegistries are registries which do not have a valid TLS certificates or only support HTTP connections.",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "ingress": {
                  "description": "Ingress holds cluster-wide information about ingress, including the default ingress domain used for routes.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "appsDomain": {
                      "description": "appsDomain is an optional domain to use instead of the one specified in the domain field when a Route is created without specifying an explicit host. If appsDomain is nonempty, this value is used to generate default host values for Route. Unlike domain, appsDomain may be modified after installation. This assumes a new ingresscontroller has been setup with a wildcard certificate.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "componentRoutes": {
                      "description": "componentRoutes is an optional list of routes that are managed by OpenShift components that a cluster-admin is able to configure the hostname and serving certificate for. The namespace and name of each route in this list should match an existing entry in the status.componentRoutes list. \n To determine the set of configurable Routes, look at namespace and name of entries in the .status.componentRoutes list, where participating operators write the status of configurable routes.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "ComponentRouteSpec allows for configuration of a route's hostname and serving certificate.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "hostname",
                          "name",
                          "namespace"
                        ],
                        "properties": {
                          "hostname": {
                            "description": "hostname is the hostname that should be used by the route.",
                            "type": "string",
                            "pattern": "^([a-zA-Z0-9\\p{S}\\p{L}]((-?[a-zA-Z0-9\\p{S}\\p{L}]{0,62})?)|([a-zA-Z0-9\\p{S}\\p{L}](([a-zA-Z0-9-\\p{S}\\p{L}]{0,61}[a-zA-Z0-9\\p{S}\\p{L}])?)(\\.)){1,}([a-zA-Z\\p{L}]){2,63})$|^(([a-z0-9][-a-z0-9]{0,61}[a-z0-9]|[a-z0-9]{1,63})[\\.]){0,}([a-z0-9][-a-z0-9]{0,61}[a-z0-9]|[a-z0-9]{1,63})$"
                          },
                          "name": {
                            "description": "name is the logical name of the route to customize. \n The namespace and name of this componentRoute must match a corresponding entry in the list of status.componentRoutes if the route is to be customized.",
                            "type": "string",
                            "maxLength": 256,
                            "minLength": 1
                          },
                          "namespace": {
                            "description": "namespace is the namespace of the route to customize. \n The namespace and name of this componentRoute must match a corresponding entry in the list of status.componentRoutes if the route is to be customized.",
                            "type": "string",
                            "maxLength": 63,
                            "minLength": 1,
                            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                          },
                          "servingCertKeyPairSecret": {
                            "description": "servingCertKeyPairSecret is a reference to a secret of type `kubernetes.io/tls` in the openshift-config namespace. The serving cert/key pair must match and will be used by the operator to fulfill the intent of serving with this name. If the custom hostname uses the default routing suffix of the cluster, the Secret specification for a serving certificate will not be needed.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "name is the metadata.name of the referenced secret",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "domain": {
                      "description": "domain is used to generate a default host name for a route when the route's host name is empty. The generated host name will follow this pattern: \"<route-name>.<route-namespace>.<domain>\". \n It is also used as the default wildcard domain suffix for ingress. The default ingresscontroller domain will follow this pattern: \"*.<domain>\". \n Once set, changing domain is not currently supported.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "requiredHSTSPolicies": {
                      "description": "requiredHSTSPolicies specifies HSTS policies that are required to be set on newly created  or updated routes matching the domainPattern/s and namespaceSelector/s that are specified in the policy. Each requiredHSTSPolicy must have at least a domainPattern and a maxAge to validate a route HSTS Policy route annotation, and affect route admission. \n A candidate route is checked for HSTS Policies if it has the HSTS Policy route annotation: \"haproxy.router.openshift.io/hsts_header\" E.g. haproxy.router.openshift.io/hsts_header: max-age=31536000;preload;includeSubDomains \n - For each candidate route, if it matches a requiredHSTSPolicy domainPattern and optional namespaceSelector, then the maxAge, preloadPolicy, and includeSubdomainsPolicy must be valid to be admitted.  Otherwise, the route is rejected. - The first match, by domainPattern and optional namespaceSelector, in the ordering of the RequiredHSTSPolicies determines the route's admission status. - If the candidate route doesn't match any requiredHSTSPolicy domainPattern and optional namespaceSelector, then it may use any HSTS Policy annotation. \n The HSTS policy configuration may be changed after routes have already been created. An update to a previously admitted route may then fail if the updated route does not conform to the updated HSTS policy configuration. However, changing the HSTS policy configuration will not cause a route that is already admitted to stop working. \n Note that if there are no RequiredHSTSPolicies, any HSTS Policy annotation on the route is valid.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "domainPatterns"
                        ],
                        "properties": {
                          "domainPatterns": {
                            "description": "domainPatterns is a list of domains for which the desired HSTS annotations are required. If domainPatterns is specified and a route is created with a spec.host matching one of the domains, the route must specify the HSTS Policy components described in the matching RequiredHSTSPolicy. \n The use of wildcards is allowed like this: *.foo.com matches everything under foo.com. foo.com only matches foo.com, so to cover foo.com and everything under it, you must specify *both*.",
                            "type": "array",
                            "minItems": 1,
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "includeSubDomainsPolicy": {
                            "description": "includeSubDomainsPolicy means the HSTS Policy should apply to any subdomains of the host's domain name.  Thus, for the host bar.foo.com, if includeSubDomainsPolicy was set to RequireIncludeSubDomains: - the host app.bar.foo.com would inherit the HSTS Policy of bar.foo.com - the host bar.foo.com would inherit the HSTS Policy of bar.foo.com - the host foo.com would NOT inherit the HSTS Policy of bar.foo.com - the host def.foo.com would NOT inherit the HSTS Policy of bar.foo.com",
                            "type": [
                              "string",
                              "null"
                            ],
                            "enum": [
                              "RequireIncludeSubDomains",
                              "RequireNoIncludeSubDomains",
                              "NoOpinion"
                            ]
                          },
                          "maxAge": {
                            "description": "maxAge is the delta time range in seconds during which hosts are regarded as HSTS hosts. If set to 0, it negates the effect, and hosts are removed as HSTS hosts. If set to 0 and includeSubdomains is specified, all subdomains of the host are also removed as HSTS hosts. maxAge is a time-to-live value, and if this policy is not refreshed on a client, the HSTS policy will eventually expire on that client.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "largestMaxAge": {
                                "description": "The largest allowed value (in seconds) of the RequiredHSTSPolicy max-age This value can be left unspecified, in which case no upper limit is enforced.",
                                "type": [
                                  "integer",
                                  "null"
                                ],
                                "format": "int32",
                                "maximum": 2147483647,
                                "minimum": 0
                              },
                              "smallestMaxAge": {
                                "description": "The smallest allowed value (in seconds) of the RequiredHSTSPolicy max-age Setting max-age=0 allows the deletion of an existing HSTS header from a host.  This is a necessary tool for administrators to quickly correct mistakes. This value can be left unspecified, in which case no lower limit is enforced.",
                                "type": [
                                  "integer",
                                  "null"
                                ],
                                "format": "int32",
                                "maximum": 2147483647,
                                "minimum": 0
                              }
                            },
                            "additionalProperties": false
                          },
                          "namespaceSelector": {
                            "description": "namespaceSelector specifies a label selector such that the policy applies only to those routes that are in namespaces with labels that match the selector, and are in one of the DomainPatterns. Defaults to the empty LabelSelector, which matches everything.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                      "type": [
                                        "array",
                                        "null"
                                      ],
                                      "items": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "matchLabels": {
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "additionalProperties": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "preloadPolicy": {
                            "description": "preloadPolicy directs the client to include hosts in its host preload list so that it never needs to do an initial load to get the HSTS header (note that this is not defined in RFC 6797 and is therefore client implementation-dependent).",
                            "type": [
                              "string",
                              "null"
                            ],
                            "enum": [
                              "RequirePreload",
                              "RequireNoPreload",
                              "NoOpinion"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "items": {
                  "description": "Items embeds the serialized configuration resources. \n Deprecated This field is deprecated and will be removed in a future release",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "network": {
                  "description": "Network holds cluster-wide information about the network. It is used to configure the desired network configuration, such as: IP address pools for services/pod IPs, network plugin, etc. Please view network.spec for an explanation on what applies when configuring this resource. TODO (csrwng): Add validation here to exclude changes that conflict with networking settings in the HostedCluster.Spec.Networking field.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "clusterNetwork": {
                      "description": "IP address pool to use for pod IPs. This field is immutable after installation.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "ClusterNetworkEntry is a contiguous block of IP addresses from which pod IPs are allocated.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "cidr": {
                            "description": "The complete block for pod IPs.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "hostPrefix": {
                            "description": "The size (prefix) of block to allocate to each node. If this field is not used by the plugin, it can be left unset.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32",
                            "minimum": 0
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "externalIP": {
                      "description": "externalIP defines configuration for controllers that affect Service.ExternalIP. If nil, then ExternalIP is not allowed to be set.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "autoAssignCIDRs": {
                          "description": "autoAssignCIDRs is a list of CIDRs from which to automatically assign Service.ExternalIP. These are assigned when the service is of type LoadBalancer. In general, this is only useful for bare-metal clusters. In Openshift 3.x, this was misleadingly called \"IngressIPs\". Automatically assigned External IPs are not affected by any ExternalIPPolicy rules. Currently, only one entry may be provided.",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "policy": {
                          "description": "policy is a set of restrictions applied to the ExternalIP field. If nil or empty, then ExternalIP is not allowed to be set.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "allowedCIDRs": {
                              "description": "allowedCIDRs is the list of allowed CIDRs.",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "rejectedCIDRs": {
                              "description": "rejectedCIDRs is the list of disallowed CIDRs. These take precedence over allowedCIDRs.",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "networkType": {
                      "description": "NetworkType is the plugin that is to be deployed (e.g. OpenShiftSDN). This should match a value that the cluster-network-operator understands, or else no networking will be installed. Currently supported values are: - OpenShiftSDN This field is immutable after installation.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "serviceNetwork": {
                      "description": "IP address pool for services. Currently, we only support a single entry here. This field is immutable after installation.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "serviceNodePortRange": {
                      "description": "The port range allowed for Services of type NodePort. If not specified, the default of 30000-32767 will be used. Such Services without a NodePort specified will have one automatically allocated from this range. This parameter can be updated after the cluster is installed.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "pattern": "^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])-([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$"
                    }
                  },
                  "additionalProperties": false
                },
                "oauth": {
                  "description": "OAuth holds cluster-wide information about OAuth. It is used to configure the integrated OAuth server. This configuration is only honored when the top level Authentication config has type set to IntegratedOAuth.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "identityProviders": {
                      "description": "identityProviders is an ordered list of ways for a user to identify themselves. When this list is empty, no identities are provisioned for users.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "IdentityProvider provides identities for users authenticating using credentials",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "basicAuth": {
                            "description": "basicAuth contains configuration options for the BasicAuth IdP",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "ca": {
                                "description": "ca is an optional reference to a config map by name containing the PEM-encoded CA bundle. It is used as a trust anchor to validate the TLS certificate presented by the remote server. The key \"ca.crt\" is used to locate the data. If specified and the config map or expected key is not found, the identity provider is not honored. If the specified ca data is not valid, the identity provider is not honored. If empty, the default system roots are used. The namespace for this config map is openshift-config.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "name is the metadata.name of the referenced config map",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "tlsClientCert": {
                                "description": "tlsClientCert is an optional reference to a secret by name that contains the PEM-encoded TLS client certificate to present when connecting to the server. The key \"tls.crt\" is used to locate the data. If specified and the secret or expected key is not found, the identity provider is not honored. If the specified certificate data is not valid, the identity provider is not honored. The namespace for this secret is openshift-config.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "name is the metadata.name of the referenced secret",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "tlsClientKey": {
                                "description": "tlsClientKey is an optional reference to a secret by name that contains the PEM-encoded TLS private key for the client certificate referenced in tlsClientCert. The key \"tls.key\" is used to locate the data. If specified and the secret or expected key is not found, the identity provider is not honored. If the specified certificate data is not valid, the identity provider is not honored. The namespace for this secret is openshift-config.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "name is the metadata.name of the referenced secret",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "url": {
                                "description": "url is the remote URL to connect to",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "github": {
                            "description": "github enables user authentication using GitHub credentials",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "ca": {
                                "description": "ca is an optional reference to a config map by name containing the PEM-encoded CA bundle. It is used as a trust anchor to validate the TLS certificate presented by the remote server. The key \"ca.crt\" is used to locate the data. If specified and the config map or expected key is not found, the identity provider is not honored. If the specified ca data is not valid, the identity provider is not honored. If empty, the default system roots are used. This can only be configured when hostname is set to a non-empty value. The namespace for this config map is openshift-config.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "name is the metadata.name of the referenced config map",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "clientID": {
                                "description": "clientID is the oauth client ID",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "clientSecret": {
                                "description": "clientSecret is a required reference to the secret by name containing the oauth client secret. The key \"clientSecret\" is used to locate the data. If the secret or expected key is not found, the identity provider is not honored. The namespace for this secret is openshift-config.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "name is the metadata.name of the referenced secret",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "hostname": {
                                "description": "hostname is the optional domain (e.g. \"mycompany.com\") for use with a hosted instance of GitHub Enterprise. It must match the GitHub Enterprise settings value configured at /setup/settings#hostname.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "organizations": {
                                "description": "organizations optionally restricts which organizations are allowed to log in",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "teams": {
                                "description": "teams optionally restricts which teams are allowed to log in. Format is <org>/<team>.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "gitlab": {
                            "description": "gitlab enables user authentication using GitLab credentials",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "ca": {
                                "description": "ca is an optional reference to a config map by name containing the PEM-encoded CA bundle. It is used as a trust anchor to validate the TLS certificate presented by the remote server. The key \"ca.crt\" is used to locate the data. If specified and the config map or expected key is not found, the identity provider is not honored. If the specified ca data is not valid, the identity provider is not honored. If empty, the default system roots are used. The namespace for this config map is openshift-config.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "name is the metadata.name of the referenced config map",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "clientID": {
                                "description": "clientID is the oauth client ID",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "clientSecret": {
                                "description": "clientSecret is a required reference to the secret by name containing the oauth client secret. The key \"clientSecret\" is used to locate the data. If the secret or expected key is not found, the identity provider is not honored. The namespace for this secret is openshift-config.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "name is the metadata.name of the referenced secret",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "url": {
                                "description": "url is the oauth server base URL",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "google": {
                            "description": "google enables user authentication using Google credentials",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "clientID": {
                                "description": "clientID is the oauth client ID",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "clientSecret": {
                                "description": "clientSecret is a required reference to the secret by name containing the oauth client secret. The key \"clientSecret\" is used to locate the data. If the secret or expected key is not found, the identity provider is not honored. The namespace for this secret is openshift-config.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "name is the metadata.name of the referenced secret",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "hostedDomain": {
                                "description": "hostedDomain is the optional Google App domain (e.g. \"mycompany.com\") to restrict logins to",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "htpasswd": {
                            "description": "htpasswd enables user authentication using an HTPasswd file to validate credentials",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "fileData": {
                                "description": "fileData is a required reference to a secret by name containing the data to use as the htpasswd file. The key \"htpasswd\" is used to locate the data. If the secret or expected key is not found, the identity provider is not honored. If the specified htpasswd data is not valid, the identity provider is not honored. The namespace for this secret is openshift-config.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "name is the metadata.name of the referenced secret",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "keystone": {
                            "description": "keystone enables user authentication using keystone password credentials",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "ca": {
                                "description": "ca is an optional reference to a config map by name containing the PEM-encoded CA bundle. It is used as a trust anchor to validate the TLS certificate presented by the remote server. The key \"ca.crt\" is used to locate the data. If specified and the config map or expected key is not found, the identity provider is not honored. If the specified ca data is not valid, the identity provider is not honored. If empty, the default system roots are used. The namespace for this config map is openshift-config.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "name is the metadata.name of the referenced config map",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "domainName": {
                                "description": "domainName is required for keystone v3",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "tlsClientCert": {
                                "description": "tlsClientCert is an optional reference to a secret by name that contains the PEM-encoded TLS client certificate to present when connecting to the server. The key \"tls.crt\" is used to locate the data. If specified and the secret or expected key is not found, the identity provider is not honored. If the specified certificate data is not valid, the identity provider is not honored. The namespace for this secret is openshift-config.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "name is the metadata.name of the referenced secret",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "tlsClientKey": {
                                "description": "tlsClientKey is an optional reference to a secret by name that contains the PEM-encoded TLS private key for the client certificate referenced in tlsClientCert. The key \"tls.key\" is used to locate the data. If specified and the secret or expected key is not found, the identity provider is not honored. If the specified certificate data is not valid, the identity provider is not honored. The namespace for this secret is openshift-config.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "name is the metadata.name of the referenced secret",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "url": {
                                "description": "url is the remote URL to connect to",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "ldap": {
                            "description": "ldap enables user authentication using LDAP credentials",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "attributes": {
                                "description": "attributes maps LDAP attributes to identities",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "email": {
                                    "description": "email is the list of attributes whose values should be used as the email address. Optional. If unspecified, no email is set for the identity",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "id": {
                                    "description": "id is the list of attributes whose values should be used as the user ID. Required. First non-empty attribute is used. At least one attribute is required. If none of the listed attribute have a value, authentication fails. LDAP standard identity attribute is \"dn\"",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "name": {
                                    "description": "name is the list of attributes whose values should be used as the display name. Optional. If unspecified, no display name is set for the identity LDAP standard display name attribute is \"cn\"",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "preferredUsername": {
                                    "description": "preferredUsername is the list of attributes whose values should be used as the preferred username. LDAP standard login attribute is \"uid\"",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "bindDN": {
                                "description": "bindDN is an optional DN to bind with during the search phase.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "bindPassword": {
                                "description": "bindPassword is an optional reference to a secret by name containing a password to bind with during the search phase. The key \"bindPassword\" is used to locate the data. If specified and the secret or expected key is not found, the identity provider is not honored. The namespace for this secret is openshift-config.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "name is the metadata.name of the referenced secret",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "ca": {
                                "description": "ca is an optional reference to a config map by name containing the PEM-encoded CA bundle. It is used as a trust anchor to validate the TLS certificate presented by the remote server. The key \"ca.crt\" is used to locate the data. If specified and the config map or expected key is not found, the identity provider is not honored. If the specified ca data is not valid, the identity provider is not honored. If empty, the default system roots are used. The namespace for this config map is openshift-config.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "name is the metadata.name of the referenced config map",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "insecure": {
                                "description": "insecure, if true, indicates the connection should not use TLS WARNING: Should not be set to `true` with the URL scheme \"ldaps://\" as \"ldaps://\" URLs always          attempt to connect using TLS, even when `insecure` is set to `true` When `true`, \"ldap://\" URLS connect insecurely. When `false`, \"ldap://\" URLs are upgraded to a TLS connection using StartTLS as specified in https://tools.ietf.org/html/rfc2830.",
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              },
                              "url": {
                                "description": "url is an RFC 2255 URL which specifies the LDAP search parameters to use. The syntax of the URL is: ldap://host:port/basedn?attribute?scope?filter",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "mappingMethod": {
                            "description": "mappingMethod determines how identities from this provider are mapped to users Defaults to \"claim\"",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "name": {
                            "description": "name is used to qualify the identities returned by this provider. - It MUST be unique and not shared by any other identity provider used - It MUST be a valid path segment: name cannot equal \".\" or \"..\" or contain \"/\" or \"%\" or \":\"   Ref: https://godoc.org/github.com/openshift/origin/pkg/user/apis/user/validation#ValidateIdentityProviderName",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "openID": {
                            "description": "openID enables user authentication using OpenID credentials",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "ca": {
                                "description": "ca is an optional reference to a config map by name containing the PEM-encoded CA bundle. It is used as a trust anchor to validate the TLS certificate presented by the remote server. The key \"ca.crt\" is used to locate the data. If specified and the config map or expected key is not found, the identity provider is not honored. If the specified ca data is not valid, the identity provider is not honored. If empty, the default system roots are used. The namespace for this config map is openshift-config.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "name is the metadata.name of the referenced config map",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "claims": {
                                "description": "claims mappings",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "email": {
                                    "description": "email is the list of claims whose values should be used as the email address. Optional. If unspecified, no email is set for the identity",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "groups": {
                                    "description": "groups is the list of claims value of which should be used to synchronize groups from the OIDC provider to OpenShift for the user. If multiple claims are specified, the first one with a non-empty value is used.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "description": "OpenIDClaim represents a claim retrieved from an OpenID provider's tokens or userInfo responses",
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "minLength": 1
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "name": {
                                    "description": "name is the list of claims whose values should be used as the display name. Optional. If unspecified, no display name is set for the identity",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "preferredUsername": {
                                    "description": "preferredUsername is the list of claims whose values should be used as the preferred username. If unspecified, the preferred username is determined from the value of the sub claim",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "clientID": {
                                "description": "clientID is the oauth client ID",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "clientSecret": {
                                "description": "clientSecret is a required reference to the secret by name containing the oauth client secret. The key \"clientSecret\" is used to locate the data. If the secret or expected key is not found, the identity provider is not honored. The namespace for this secret is openshift-config.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "name is the metadata.name of the referenced secret",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "extraAuthorizeParameters": {
                                "description": "extraAuthorizeParameters are any custom parameters to add to the authorize request.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "additionalProperties": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "extraScopes": {
                                "description": "extraScopes are any scopes to request in addition to the standard \"openid\" scope.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "issuer": {
                                "description": "issuer is the URL that the OpenID Provider asserts as its Issuer Identifier. It must use the https scheme with no query or fragment component.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "requestHeader": {
                            "description": "requestHeader enables user authentication using request header credentials",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "ca": {
                                "description": "ca is a required reference to a config map by name containing the PEM-encoded CA bundle. It is used as a trust anchor to validate the TLS certificate presented by the remote server. Specifically, it allows verification of incoming requests to prevent header spoofing. The key \"ca.crt\" is used to locate the data. If the config map or expected key is not found, the identity provider is not honored. If the specified ca data is not valid, the identity provider is not honored. The namespace for this config map is openshift-config.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "name is the metadata.name of the referenced config map",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "challengeURL": {
                                "description": "challengeURL is a URL to redirect unauthenticated /authorize requests to Unauthenticated requests from OAuth clients which expect WWW-Authenticate challenges will be redirected here. ${url} is replaced with the current URL, escaped to be safe in a query parameter   https://www.example.com/sso-login?then=${url} ${query} is replaced with the current query string   https://www.example.com/auth-proxy/oauth/authorize?${query} Required when challenge is set to true.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "clientCommonNames": {
                                "description": "clientCommonNames is an optional list of common names to require a match from. If empty, any client certificate validated against the clientCA bundle is considered authoritative.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "emailHeaders": {
                                "description": "emailHeaders is the set of headers to check for the email address",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "headers": {
                                "description": "headers is the set of headers to check for identity information",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "loginURL": {
                                "description": "loginURL is a URL to redirect unauthenticated /authorize requests to Unauthenticated requests from OAuth clients which expect interactive logins will be redirected here ${url} is replaced with the current URL, escaped to be safe in a query parameter   https://www.example.com/sso-login?then=${url} ${query} is replaced with the current query string   https://www.example.com/auth-proxy/oauth/authorize?${query} Required when login is set to true.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "nameHeaders": {
                                "description": "nameHeaders is the set of headers to check for the display name",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "preferredUsernameHeaders": {
                                "description": "preferredUsernameHeaders is the set of headers to check for the preferred username",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "type": {
                            "description": "type identifies the identity provider type for this entry.",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "templates": {
                      "description": "templates allow you to customize pages like the login page.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "error": {
                          "description": "error is the name of a secret that specifies a go template to use to render error pages during the authentication or grant flow. The key \"errors.html\" is used to locate the template data. If specified and the secret or expected key is not found, the default error page is used. If the specified template is not valid, the default error page is used. If unspecified, the default error page is used. The namespace for this secret is openshift-config.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "name is the metadata.name of the referenced secret",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "login": {
                          "description": "login is the name of a secret that specifies a go template to use to render the login page. The key \"login.html\" is used to locate the template data. If specified and the secret or expected key is not found, the default login page is used. If the specified template is not valid, the default login page is used. If unspecified, the default login page is used. The namespace for this secret is openshift-config.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "name is the metadata.name of the referenced secret",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "providerSelection": {
                          "description": "providerSelection is the name of a secret that specifies a go template to use to render the provider selection page. The key \"providers.html\" is used to locate the template data. If specified and the secret or expected key is not found, the default provider selection page is used. If the specified template is not valid, the default provider selection page is used. If unspecified, the default provider selection page is used. The namespace for this secret is openshift-config.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "name is the metadata.name of the referenced secret",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "tokenConfig": {
                      "description": "tokenConfig contains options for authorization and access tokens",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "accessTokenInactivityTimeout": {
                          "description": "accessTokenInactivityTimeout defines the token inactivity timeout for tokens granted by any client. The value represents the maximum amount of time that can occur between consecutive uses of the token. Tokens become invalid if they are not used within this temporal window. The user will need to acquire a new token to regain access once a token times out. Takes valid time duration string such as \"5m\", \"1.5h\" or \"2h45m\". The minimum allowed value for duration is 300s (5 minutes). If the timeout is configured per client, then that value takes precedence. If the timeout value is not specified and the client does not override the value, then tokens are valid until their lifetime. \n WARNING: existing tokens' timeout will not be affected (lowered) by changing this value",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "accessTokenInactivityTimeoutSeconds": {
                          "description": "accessTokenInactivityTimeoutSeconds - DEPRECATED: setting this field has no effect.",
                          "type": [
                            "integer",
                            "null"
                          ],
                          "format": "int32"
                        },
                        "accessTokenMaxAgeSeconds": {
                          "description": "accessTokenMaxAgeSeconds defines the maximum age of access tokens",
                          "type": [
                            "integer",
                            "null"
                          ],
                          "format": "int32"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "proxy": {
                  "description": "Proxy holds cluster-wide information on how to configure default proxies for the cluster.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "httpProxy": {
                      "description": "httpProxy is the URL of the proxy for HTTP requests.  Empty means unset and will not result in an env var.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "httpsProxy": {
                      "description": "httpsProxy is the URL of the proxy for HTTPS requests.  Empty means unset and will not result in an env var.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "noProxy": {
                      "description": "noProxy is a comma-separated list of hostnames and/or CIDRs and/or IPs for which the proxy should not be used. Empty means unset and will not result in an env var.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "readinessEndpoints": {
                      "description": "readinessEndpoints is a list of endpoints used to verify readiness of the proxy.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "trustedCA": {
                      "description": "trustedCA is a reference to a ConfigMap containing a CA certificate bundle. The trustedCA field should only be consumed by a proxy validator. The validator is responsible for reading the certificate bundle from the required key \"ca-bundle.crt\", merging it with the system default trust bundle, and writing the merged trust bundle to a ConfigMap named \"trusted-ca-bundle\" in the \"openshift-config-managed\" namespace. Clients that expect to make proxy connections must use the trusted-ca-bundle for all HTTPS requests to the proxy, and may use the trusted-ca-bundle for non-proxy HTTPS requests as well. \n The namespace for the ConfigMap referenced by trustedCA is \"openshift-config\". Here is an example ConfigMap (in yaml): \n apiVersion: v1 kind: ConfigMap metadata:  name: user-ca-bundle  namespace: openshift-config  data:    ca-bundle.crt: |      -----BEGIN CERTIFICATE-----      Custom CA certificate bundle.      -----END CERTIFICATE-----",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "name is the metadata.name of the referenced config map",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "scheduler": {
                  "description": "Scheduler holds cluster-wide config information to run the Kubernetes Scheduler and influence its placement decisions. The canonical name for this config is `cluster`.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "defaultNodeSelector": {
                      "description": "defaultNodeSelector helps set the cluster-wide default node selector to restrict pod placement to specific nodes. This is applied to the pods created in all namespaces and creates an intersection with any existing nodeSelectors already set on a pod, additionally constraining that pod's selector. For example, defaultNodeSelector: \"type=user-node,region=east\" would set nodeSelector field in pod spec to \"type=user-node,region=east\" to all pods created in all namespaces. Namespaces having project-wide node selectors won't be impacted even if this field is set. This adds an annotation section to the namespace. For example, if a new namespace is created with node-selector='type=user-node,region=east', the annotation openshift.io/node-selector: type=user-node,region=east gets added to the project. When the openshift.io/node-selector annotation is set on the project the value is used in preference to the value we are setting for defaultNodeSelector field. For instance, openshift.io/node-selector: \"type=user-node,region=west\" means that the default of \"type=user-node,region=east\" set in defaultNodeSelector would not be applied.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "mastersSchedulable": {
                      "description": "MastersSchedulable allows masters nodes to be schedulable. When this flag is turned on, all the master nodes in the cluster will be made schedulable, so that workload pods can run on them. The default value for this field is false, meaning none of the master nodes are schedulable. Important Note: Once the workload pods start running on the master nodes, extreme care must be taken to ensure that cluster-critical control plane components are not impacted. Please turn on this field after doing due diligence.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "policy": {
                      "description": "DEPRECATED: the scheduler Policy API has been deprecated and will be removed in a future release. policy is a reference to a ConfigMap containing scheduler policy which has user specified predicates and priorities. If this ConfigMap is not available scheduler will default to use DefaultAlgorithmProvider. The namespace for this configmap is openshift-config.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "name is the metadata.name of the referenced config map",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "profile": {
                      "description": "profile sets which scheduling profile should be set in order to configure scheduling decisions for new pods. \n Valid values are \"LowNodeUtilization\", \"HighNodeUtilization\", \"NoScoring\" Defaults to \"LowNodeUtilization\"",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "",
                        "LowNodeUtilization",
                        "HighNodeUtilization",
                        "NoScoring"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "secretRefs": {
                  "description": "SecretRefs holds references to any secrets referenced by configuration entries. Entries can reference the secrets using local object references. \n Deprecated This field is deprecated and will be removed in a future release",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "controllerAvailabilityPolicy": {
              "description": "ControllerAvailabilityPolicy specifies the availability policy applied to critical control plane components. The default value is SingleReplica.",
              "type": [
                "string",
                "null"
              ]
            },
            "dns": {
              "description": "DNS specifies DNS configuration for the cluster.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "baseDomain"
              ],
              "properties": {
                "baseDomain": {
                  "description": "BaseDomain is the base domain of the cluster.",
                  "type": "string"
                },
                "privateZoneID": {
                  "description": "PrivateZoneID is the Hosted Zone ID where all the DNS records that are only available internally to the cluster exist.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "publicZoneID": {
                  "description": "PublicZoneID is the Hosted Zone ID where all the DNS records that are publicly accessible to the internet exist.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "etcd": {
              "description": "Etcd specifies configuration for the control plane etcd cluster. The default ManagementType is Managed. Once set, the ManagementType cannot be changed.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "managementType"
              ],
              "properties": {
                "managed": {
                  "description": "Managed specifies the behavior of an etcd cluster managed by HyperShift.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "storage"
                  ],
                  "properties": {
                    "storage": {
                      "description": "Storage specifies how etcd data is persisted.",
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "persistentVolume": {
                          "description": "PersistentVolume is the configuration for PersistentVolume etcd storage. With this implementation, a PersistentVolume will be allocated for every etcd member (either 1 or 3 depending on the HostedCluster control plane availability configuration).",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "size": {
                              "description": "Size is the minimum size of the data volume for each etcd member.",
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "x-kubernetes-int-or-string": true
                            },
                            "storageClassName": {
                              "description": "StorageClassName is the StorageClass of the data volume for each etcd member. \n See https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "restoreSnapshotURL": {
                          "description": "RestoreSnapshotURL allows an optional list of URLs to be provided where an etcd snapshot can be downloaded, for example a pre-signed URL referencing a storage service, one URL per replica. This snapshot will be restored on initial startup, only when the etcd PV is empty.",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "type": {
                          "description": "Type is the kind of persistent storage implementation to use for etcd.",
                          "type": "string",
                          "enum": [
                            "PersistentVolume"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "managementType": {
                  "description": "ManagementType defines how the etcd cluster is managed.",
                  "type": "string",
                  "enum": [
                    "Managed",
                    "Unmanaged"
                  ]
                },
                "unmanaged": {
                  "description": "Unmanaged specifies configuration which enables the control plane to integrate with an eternally managed etcd cluster.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "endpoint",
                    "tls"
                  ],
                  "properties": {
                    "endpoint": {
                      "description": "Endpoint is the full etcd cluster client endpoint URL. For example: \n     https://etcd-client:2379 \n If the URL uses an HTTPS scheme, the TLS field is required.",
                      "type": "string",
                      "pattern": "^https://"
                    },
                    "tls": {
                      "description": "TLS specifies TLS configuration for HTTPS etcd client endpoints.",
                      "type": "object",
                      "required": [
                        "clientSecret"
                      ],
                      "properties": {
                        "clientSecret": {
                          "description": "ClientSecret refers to a secret for client mTLS authentication with the etcd cluster. It may have the following key/value pairs: \n     etcd-client-ca.crt: Certificate Authority value     etcd-client.crt: Client certificate value     etcd-client.key: Client certificate key value",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "fips": {
              "description": "FIPS indicates whether this cluster's nodes will be running in FIPS mode. If set to true, the control plane's ignition server will be configured to expect that nodes joining the cluster will be FIPS-enabled.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "imageContentSources": {
              "description": "ImageContentSources specifies image mirrors that can be used by cluster nodes to pull content.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "ImageContentSource specifies image mirrors that can be used by cluster nodes to pull content. For cluster workloads, if a container image registry host of the pullspec matches Source then one of the Mirrors are substituted as hosts in the pullspec and tried in order to fetch the image.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "source"
                ],
                "properties": {
                  "mirrors": {
                    "description": "Mirrors are one or more repositories that may also contain the same images.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "source": {
                    "description": "Source is the repository that users refer to, e.g. in image pull specifications.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "infraID": {
              "description": "InfraID is a globally unique identifier for the cluster. This identifier will be used to associate various cloud resources with the HostedCluster and its associated NodePools.",
              "type": [
                "string",
                "null"
              ]
            },
            "infrastructureAvailabilityPolicy": {
              "description": "InfrastructureAvailabilityPolicy specifies the availability policy applied to infrastructure services which run on cluster nodes. The default value is SingleReplica.",
              "type": [
                "string",
                "null"
              ]
            },
            "issuerURL": {
              "description": "IssuerURL is an OIDC issuer URL which is used as the issuer in all ServiceAccount tokens generated by the control plane API server. The default value is kubernetes.default.svc, which only works for in-cluster validation.",
              "type": [
                "string",
                "null"
              ]
            },
            "networking": {
              "description": "Networking specifies network configuration for the cluster.",
              "type": "object",
              "required": [
                "machineCIDR",
                "networkType",
                "podCIDR",
                "serviceCIDR"
              ],
              "properties": {
                "apiServer": {
                  "description": "APIServer contains advanced network settings for the API server that affect how the APIServer is exposed inside a cluster node.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "advertiseAddress": {
                      "description": "AdvertiseAddress is the address that nodes will use to talk to the API server. This is an address associated with the loopback adapter of each node. If not specified, 172.20.0.1 is used.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "allowedCIDRBlocks": {
                      "description": "AllowedCIDRBlocks is an allow list of CIDR blocks that can access the APIServer If not specified, traffic is allowed from all addresses. This depends on underlying support by the cloud provider for Service LoadBalancerSourceRanges",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(3[0-2]|[1-2][0-9]|[0-9]))$"
                      }
                    },
                    "port": {
                      "description": "Port is the port at which the APIServer is exposed inside a node. Other pods using host networking cannot listen on this port. If not specified, 6443 is used.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int32"
                    }
                  },
                  "additionalProperties": false
                },
                "machineCIDR": {
                  "description": "MachineCIDR is... \n TODO(dan): document it",
                  "type": "string"
                },
                "networkType": {
                  "description": "NetworkType specifies the SDN provider used for cluster networking.",
                  "type": "string",
                  "enum": [
                    "OpenShiftSDN",
                    "Calico",
                    "OVNKubernetes",
                    "Other"
                  ]
                },
                "podCIDR": {
                  "description": "PodCIDR is... \n TODO(dan): document it",
                  "type": "string"
                },
                "serviceCIDR": {
                  "description": "ServiceCIDR is... \n TODO(dan): document it",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "olmCatalogPlacement": {
              "description": "OLMCatalogPlacement specifies the placement of OLM catalog components. By default, this is set to management and OLM catalog components are deployed onto the management cluster. If set to guest, the OLM catalog components will be deployed onto the guest cluster.",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "management",
                "guest"
              ]
            },
            "pausedUntil": {
              "description": "PausedUntil is a field that can be used to pause reconciliation on a resource. Either a date can be provided in RFC3339 format or a boolean. If a date is provided: reconciliation is paused on the resource until that date. If the boolean true is provided: reconciliation is paused on the resource until the field is removed.",
              "type": [
                "string",
                "null"
              ]
            },
            "platform": {
              "description": "Platform specifies the underlying infrastructure provider for the cluster and is used to configure platform specific behavior.",
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "agent": {
                  "description": "Agent specifies configuration for agent-based installations.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "agentNamespace"
                  ],
                  "properties": {
                    "agentNamespace": {
                      "description": "AgentNamespace is the namespace where to search for Agents for this cluster",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "aws": {
                  "description": "AWS specifies configuration for clusters running on Amazon Web Services.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "controlPlaneOperatorCreds",
                    "kubeCloudControllerCreds",
                    "nodePoolManagementCreds",
                    "region",
                    "rolesRef"
                  ],
                  "properties": {
                    "cloudProviderConfig": {
                      "description": "CloudProviderConfig specifies AWS networking configuration for the control plane. \n TODO(dan): should this be named AWSNetworkConfig?",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "vpc"
                      ],
                      "properties": {
                        "subnet": {
                          "description": "Subnet is the subnet to use for control plane cloud resources.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "arn": {
                              "description": "ARN of resource",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "filters": {
                              "description": "Filters is a set of key/value pairs used to identify a resource They are applied according to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "description": "Filter is a filter used to identify an AWS resource",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "name",
                                  "values"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name of the filter. Filter names are case-sensitive.",
                                    "type": "string"
                                  },
                                  "values": {
                                    "description": "Values includes one or more filter values. Filter values are case-sensitive.",
                                    "type": "array",
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "id": {
                              "description": "ID of resource",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "vpc": {
                          "description": "VPC is the VPC to use for control plane cloud resources.",
                          "type": "string"
                        },
                        "zone": {
                          "description": "Zone is the availability zone where control plane cloud resources are created.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "controlPlaneOperatorCreds": {
                      "description": "Deprecated This field will be removed in the next API release. Use RolesRef instead.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "endpointAccess": {
                      "description": "EndpointAccess specifies the publishing scope of cluster endpoints. The default is Public.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "Public",
                        "PublicAndPrivate",
                        "Private"
                      ]
                    },
                    "kubeCloudControllerCreds": {
                      "description": "Deprecated This field will be removed in the next API release. Use RolesRef instead.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "nodePoolManagementCreds": {
                      "description": "Deprecated This field will be removed in the next API release. Use RolesRef instead.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "region": {
                      "description": "Region is the AWS region in which the cluster resides. This configures the OCP control plane cloud integrations, and is used by NodePool to resolve the correct boot AMI for a given release.",
                      "type": "string"
                    },
                    "resourceTags": {
                      "description": "ResourceTags is a list of additional tags to apply to AWS resources created for the cluster. See https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html for information on tagging AWS resources. AWS supports a maximum of 50 tags per resource. OpenShift reserves 25 tags for its use, leaving 25 tags available for the user.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "maxItems": 25,
                      "items": {
                        "description": "AWSResourceTag is a tag to apply to AWS resources created for the cluster.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key",
                          "value"
                        ],
                        "properties": {
                          "key": {
                            "description": "Key is the key of the tag.",
                            "type": "string",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "^[0-9A-Za-z_.:/=+-@]+$"
                          },
                          "value": {
                            "description": "Value is the value of the tag. \n Some AWS service do not support empty values. Since tags are added to resources in many services, the length of the tag value must meet the requirements of all services.",
                            "type": "string",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "^[0-9A-Za-z_.:/=+-@]+$"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "roles": {
                      "description": "Deprecated This field will be removed in the next API release. Use RolesRef instead.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "arn",
                          "name",
                          "namespace"
                        ],
                        "properties": {
                          "arn": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "namespace": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "rolesRef": {
                      "description": "RolesRef contains references to various AWS IAM roles required to enable integrations such as OIDC.",
                      "type": "object",
                      "required": [
                        "controlPlaneOperatorARN",
                        "imageRegistryARN",
                        "ingressARN",
                        "kubeCloudControllerARN",
                        "networkARN",
                        "nodePoolManagementARN",
                        "storageARN"
                      ],
                      "properties": {
                        "controlPlaneOperatorARN": {
                          "description": "ControlPlaneOperatorARN  is an ARN value referencing a role that should contain policy permissions matching the control-plane-operator policy. \n The following is an example of a valid policy document: \n { \t\"Version\": \"2012-10-17\", \t\"Statement\": [ \t\t{ \t\t\t\"Effect\": \"Allow\", \t\t\t\"Action\": [ \t\t\t\t\"ec2:CreateVpcEndpoint\", \t\t\t\t\"ec2:DescribeVpcEndpoints\", \t\t\t\t\"ec2:ModifyVpcEndpoint\", \t\t\t\t\"ec2:DeleteVpcEndpoints\", \t\t\t\t\"ec2:CreateTags\", \t\t\t\t\"route53:ListHostedZones\" \t\t\t], \t\t\t\"Resource\": \"*\" \t\t}, \t\t{ \t\t\t\"Effect\": \"Allow\", \t\t\t\"Action\": [ \t\t\t\t\"route53:ChangeResourceRecordSets\", \t\t\t\t\"route53:ListResourceRecordSets\" \t\t\t], \t\t\t\"Resource\": \"arn:aws:route53:::%s\" \t\t} \t] }",
                          "type": "string"
                        },
                        "imageRegistryARN": {
                          "description": "ImageRegistryARN is an ARN value referencing a role used for image registry OIDC integration. \n The following is an example of a valid policy document: \n { \t\"Version\": \"2012-10-17\", \t\"Statement\": [ \t\t{ \t\t\t\"Effect\": \"Allow\", \t\t\t\"Action\": [ \t\t\t\t\"s3:CreateBucket\", \t\t\t\t\"s3:DeleteBucket\", \t\t\t\t\"s3:PutBucketTagging\", \t\t\t\t\"s3:GetBucketTagging\", \t\t\t\t\"s3:PutBucketPublicAccessBlock\", \t\t\t\t\"s3:GetBucketPublicAccessBlock\", \t\t\t\t\"s3:PutEncryptionConfiguration\", \t\t\t\t\"s3:GetEncryptionConfiguration\", \t\t\t\t\"s3:PutLifecycleConfiguration\", \t\t\t\t\"s3:GetLifecycleConfiguration\", \t\t\t\t\"s3:GetBucketLocation\", \t\t\t\t\"s3:ListBucket\", \t\t\t\t\"s3:GetObject\", \t\t\t\t\"s3:PutObject\", \t\t\t\t\"s3:DeleteObject\", \t\t\t\t\"s3:ListBucketMultipartUploads\", \t\t\t\t\"s3:AbortMultipartUpload\", \t\t\t\t\"s3:ListMultipartUploadParts\" \t\t\t], \t\t\t\"Resource\": \"*\" \t\t} \t] }",
                          "type": "string"
                        },
                        "ingressARN": {
                          "description": "The referenced role must have a trust relationship that allows it to be assumed via web identity. https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html. Example: { \t\t\"Version\": \"2012-10-17\", \t\t\"Statement\": [ \t\t\t{ \t\t\t\t\"Effect\": \"Allow\", \t\t\t\t\"Principal\": { \t\t\t\t\t\"Federated\": \"{{ .ProviderARN }}\" \t\t\t\t}, \t\t\t\t\t\"Action\": \"sts:AssumeRoleWithWebIdentity\", \t\t\t\t\"Condition\": { \t\t\t\t\t\"StringEquals\": { \t\t\t\t\t\t\"{{ .ProviderName }}:sub\": {{ .ServiceAccounts }} \t\t\t\t\t} \t\t\t\t} \t\t\t} \t\t] \t} \n IngressARN is an ARN value referencing a role used for ingress OIDC integration. \n The following is an example of a valid policy document: \n { \t\"Version\": \"2012-10-17\", \t\"Statement\": [ \t\t{ \t\t\t\"Effect\": \"Allow\", \t\t\t\"Action\": [ \t\t\t\t\"elasticloadbalancing:DescribeLoadBalancers\", \t\t\t\t\"tag:GetResources\", \t\t\t\t\"route53:ListHostedZones\" \t\t\t], \t\t\t\"Resource\": \"*\" \t\t}, \t\t{ \t\t\t\"Effect\": \"Allow\", \t\t\t\"Action\": [ \t\t\t\t\"route53:ChangeResourceRecordSets\" \t\t\t], \t\t\t\"Resource\": [ \t\t\t\t\"arn:aws:route53:::PUBLIC_ZONE_ID\", \t\t\t\t\"arn:aws:route53:::PRIVATE_ZONE_ID\" \t\t\t] \t\t} \t] }",
                          "type": "string"
                        },
                        "kubeCloudControllerARN": {
                          "description": "KubeCloudControllerARN is an ARN value referencing a role that should contain policy permissions matching the cloud controller policy. \n The following is an example of a valid policy document: \n  {  \"Version\": \"2012-10-17\",  \"Statement\": [    {      \"Action\": [        \"ec2:DescribeInstances\",        \"ec2:DescribeImages\",        \"ec2:DescribeRegions\",        \"ec2:DescribeRouteTables\",        \"ec2:DescribeSecurityGroups\",        \"ec2:DescribeSubnets\",        \"ec2:DescribeVolumes\",        \"ec2:CreateSecurityGroup\",        \"ec2:CreateTags\",        \"ec2:CreateVolume\",        \"ec2:ModifyInstanceAttribute\",        \"ec2:ModifyVolume\",        \"ec2:AttachVolume\",        \"ec2:AuthorizeSecurityGroupIngress\",        \"ec2:CreateRoute\",        \"ec2:DeleteRoute\",        \"ec2:DeleteSecurityGroup\",        \"ec2:DeleteVolume\",        \"ec2:DetachVolume\",        \"ec2:RevokeSecurityGroupIngress\",        \"ec2:DescribeVpcs\",        \"elasticloadbalancing:AddTags\",        \"elasticloadbalancing:AttachLoadBalancerToSubnets\",        \"elasticloadbalancing:ApplySecurityGroupsToLoadBalancer\",        \"elasticloadbalancing:CreateLoadBalancer\",        \"elasticloadbalancing:CreateLoadBalancerPolicy\",        \"elasticloadbalancing:CreateLoadBalancerListeners\",        \"elasticloadbalancing:ConfigureHealthCheck\",        \"elasticloadbalancing:DeleteLoadBalancer\",        \"elasticloadbalancing:DeleteLoadBalancerListeners\",        \"elasticloadbalancing:DescribeLoadBalancers\",        \"elasticloadbalancing:DescribeLoadBalancerAttributes\",        \"elasticloadbalancing:DetachLoadBalancerFromSubnets\",        \"elasticloadbalancing:DeregisterInstancesFromLoadBalancer\",        \"elasticloadbalancing:ModifyLoadBalancerAttributes\",        \"elasticloadbalancing:RegisterInstancesWithLoadBalancer\",        \"elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer\",        \"elasticloadbalancing:AddTags\",        \"elasticloadbalancing:CreateListener\",        \"elasticloadbalancing:CreateTargetGroup\",        \"elasticloadbalancing:DeleteListener\",        \"elasticloadbalancing:DeleteTargetGroup\",        \"elasticloadbalancing:DescribeListeners\",        \"elasticloadbalancing:DescribeLoadBalancerPolicies\",        \"elasticloadbalancing:DescribeTargetGroups\",        \"elasticloadbalancing:DescribeTargetHealth\",        \"elasticloadbalancing:ModifyListener\",        \"elasticloadbalancing:ModifyTargetGroup\",        \"elasticloadbalancing:RegisterTargets\",        \"elasticloadbalancing:SetLoadBalancerPoliciesOfListener\",        \"iam:CreateServiceLinkedRole\",        \"kms:DescribeKey\"      ],      \"Resource\": [        \"*\"      ],      \"Effect\": \"Allow\"    }  ] }",
                          "type": "string"
                        },
                        "networkARN": {
                          "description": "NetworkOIDC is an ARN value referencing a role used for networking OIDC integration. \n The following is an example of a valid policy document: \n { \t\"Version\": \"2012-10-17\", \t\"Statement\": [ \t\t{ \t\t\t\"Effect\": \"Allow\", \t\t\t\"Action\": [ \t\t\t\t\"ec2:DescribeInstances\",        \"ec2:DescribeInstanceStatus\",        \"ec2:DescribeInstanceTypes\",        \"ec2:UnassignPrivateIpAddresses\",        \"ec2:AssignPrivateIpAddresses\",        \"ec2:UnassignIpv6Addresses\",        \"ec2:AssignIpv6Addresses\",        \"ec2:DescribeSubnets\",        \"ec2:DescribeNetworkInterfaces\" \t\t\t], \t\t\t\"Resource\": \"*\" \t\t} \t] }",
                          "type": "string"
                        },
                        "nodePoolManagementARN": {
                          "description": "NodePoolManagementARN is an ARN value referencing a role that should contain policy permissions matching the node pool management policy. \n The following is an example of a valid policy document: \n {   \"Version\": \"2012-10-17\",  \"Statement\": [    {      \"Action\": [        \"ec2:AllocateAddress\",        \"ec2:AssociateRouteTable\",        \"ec2:AttachInternetGateway\",        \"ec2:AuthorizeSecurityGroupIngress\",        \"ec2:CreateInternetGateway\",        \"ec2:CreateNatGateway\",        \"ec2:CreateRoute\",        \"ec2:CreateRouteTable\",        \"ec2:CreateSecurityGroup\",        \"ec2:CreateSubnet\",        \"ec2:CreateTags\",        \"ec2:DeleteInternetGateway\",        \"ec2:DeleteNatGateway\",        \"ec2:DeleteRouteTable\",        \"ec2:DeleteSecurityGroup\",        \"ec2:DeleteSubnet\",        \"ec2:DeleteTags\",        \"ec2:DescribeAccountAttributes\",        \"ec2:DescribeAddresses\",        \"ec2:DescribeAvailabilityZones\",        \"ec2:DescribeImages\",        \"ec2:DescribeInstances\",        \"ec2:DescribeInternetGateways\",        \"ec2:DescribeNatGateways\",        \"ec2:DescribeNetworkInterfaces\",        \"ec2:DescribeNetworkInterfaceAttribute\",        \"ec2:DescribeRouteTables\",        \"ec2:DescribeSecurityGroups\",        \"ec2:DescribeSubnets\",        \"ec2:DescribeVpcs\",        \"ec2:DescribeVpcAttribute\",        \"ec2:DescribeVolumes\",        \"ec2:DetachInternetGateway\",        \"ec2:DisassociateRouteTable\",        \"ec2:DisassociateAddress\",        \"ec2:ModifyInstanceAttribute\",        \"ec2:ModifyNetworkInterfaceAttribute\",        \"ec2:ModifySubnetAttribute\",        \"ec2:ReleaseAddress\",        \"ec2:RevokeSecurityGroupIngress\",        \"ec2:RunInstances\",        \"ec2:TerminateInstances\",        \"tag:GetResources\",        \"ec2:CreateLaunchTemplate\",        \"ec2:CreateLaunchTemplateVersion\",        \"ec2:DescribeLaunchTemplates\",        \"ec2:DescribeLaunchTemplateVersions\",        \"ec2:DeleteLaunchTemplate\",        \"ec2:DeleteLaunchTemplateVersions\"      ],      \"Resource\": [        \"*\"      ],      \"Effect\": \"Allow\"    },    {      \"Condition\": {        \"StringLike\": {          \"iam:AWSServiceName\": \"elasticloadbalancing.amazonaws.com\"        }      },      \"Action\": [        \"iam:CreateServiceLinkedRole\"      ],      \"Resource\": [        \"arn:*:iam::*:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing\"      ],      \"Effect\": \"Allow\"    },    {      \"Action\": [        \"iam:PassRole\"      ],      \"Resource\": [        \"arn:*:iam::*:role/*-worker-role\"      ],      \"Effect\": \"Allow\"    }  ] }",
                          "type": "string"
                        },
                        "storageARN": {
                          "description": "StorageOIDC is an ARN value referencing a role used for storage driver OIDC integration. \n The following is an example of a valid policy document: \n { \t\"Version\": \"2012-10-17\", \t\"Statement\": [ \t\t{ \t\t\t\"Effect\": \"Allow\", \t\t\t\"Action\": [ \t\t\t\t\"ec2:AttachVolume\", \t\t\t\t\"ec2:CreateSnapshot\", \t\t\t\t\"ec2:CreateTags\", \t\t\t\t\"ec2:CreateVolume\", \t\t\t\t\"ec2:DeleteSnapshot\", \t\t\t\t\"ec2:DeleteTags\", \t\t\t\t\"ec2:DeleteVolume\", \t\t\t\t\"ec2:DescribeInstances\", \t\t\t\t\"ec2:DescribeSnapshots\", \t\t\t\t\"ec2:DescribeTags\", \t\t\t\t\"ec2:DescribeVolumes\", \t\t\t\t\"ec2:DescribeVolumesModifications\", \t\t\t\t\"ec2:DetachVolume\", \t\t\t\t\"ec2:ModifyVolume\" \t\t\t], \t\t\t\"Resource\": \"*\" \t\t} \t] }",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "serviceEndpoints": {
                      "description": "ServiceEndpoints specifies optional custom endpoints which will override the default service endpoint of specific AWS Services. \n There must be only one ServiceEndpoint for a given service name.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "AWSServiceEndpoint stores the configuration for services to override existing defaults of AWS Services.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "name",
                          "url"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name is the name of the AWS service. This must be provided and cannot be empty.",
                            "type": "string"
                          },
                          "url": {
                            "description": "URL is fully qualified URI with scheme https, that overrides the default generated endpoint for a client. This must be provided and cannot be empty.",
                            "type": "string",
                            "pattern": "^https://"
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "azure": {
                  "description": "Azure defines azure specific settings",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "credentials",
                    "location",
                    "machineIdentityID",
                    "resourceGroup",
                    "securityGroupName",
                    "subnetName",
                    "subscriptionID",
                    "vnetID",
                    "vnetName"
                  ],
                  "properties": {
                    "credentials": {
                      "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "location": {
                      "type": "string"
                    },
                    "machineIdentityID": {
                      "type": "string"
                    },
                    "resourceGroup": {
                      "type": "string"
                    },
                    "securityGroupName": {
                      "type": "string"
                    },
                    "subnetName": {
                      "type": "string"
                    },
                    "subscriptionID": {
                      "type": "string"
                    },
                    "vnetID": {
                      "type": "string"
                    },
                    "vnetName": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "ibmcloud": {
                  "description": "IBMCloud defines IBMCloud specific settings for components",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "providerType": {
                      "description": "ProviderType is a specific supported infrastructure provider within IBM Cloud.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "powervs": {
                  "description": "PowerVS specifies configuration for clusters running on IBMCloud Power VS Service. This field is immutable. Once set, It can't be changed.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "accountID",
                    "cisInstanceCRN",
                    "controlPlaneOperatorCreds",
                    "ingressOperatorCloudCreds",
                    "kubeCloudControllerCreds",
                    "nodePoolManagementCreds",
                    "region",
                    "resourceGroup",
                    "serviceInstanceID",
                    "subnet",
                    "vpc",
                    "zone"
                  ],
                  "properties": {
                    "accountID": {
                      "description": "AccountID is the IBMCloud account id. This field is immutable. Once set, It can't be changed.",
                      "type": "string"
                    },
                    "cisInstanceCRN": {
                      "description": "CISInstanceCRN is the IBMCloud CIS Service Instance's Cloud Resource Name This field is immutable. Once set, It can't be changed.",
                      "type": "string",
                      "pattern": "^crn:"
                    },
                    "controlPlaneOperatorCreds": {
                      "description": "ControlPlaneOperatorCreds is a reference to a secret containing cloud credentials with permissions matching the control-plane-operator policy. This field is immutable. Once set, It can't be changed. \n TODO(dan): document the \"control plane operator policy\"",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "ingressOperatorCloudCreds": {
                      "description": "IngressOperatorCloudCreds is a reference to a secret containing ibm cloud credentials for ingress operator to get authenticated with ibm cloud.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "kubeCloudControllerCreds": {
                      "description": "KubeCloudControllerCreds is a reference to a secret containing cloud credentials with permissions matching the cloud controller policy. This field is immutable. Once set, It can't be changed. \n TODO(dan): document the \"cloud controller policy\"",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "nodePoolManagementCreds": {
                      "description": "NodePoolManagementCreds is a reference to a secret containing cloud credentials with permissions matching the node pool management policy. This field is immutable. Once set, It can't be changed. \n TODO(dan): document the \"node pool management policy\"",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "region": {
                      "description": "Region is the IBMCloud region in which the cluster resides. This configures the OCP control plane cloud integrations, and is used by NodePool to resolve the correct boot image for a given release. This field is immutable. Once set, It can't be changed.",
                      "type": "string"
                    },
                    "resourceGroup": {
                      "description": "ResourceGroup is the IBMCloud Resource Group in which the cluster resides. This field is immutable. Once set, It can't be changed.",
                      "type": "string"
                    },
                    "serviceInstanceID": {
                      "description": "ServiceInstance is the reference to the Power VS service on which the server instance(VM) will be created. Power VS service is a container for all Power VS instances at a specific geographic region. serviceInstance can be created via IBM Cloud catalog or CLI. ServiceInstanceID is the unique identifier that can be obtained from IBM Cloud UI or IBM Cloud cli. \n More detail about Power VS service instance. https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server \n This field is immutable. Once set, It can't be changed.",
                      "type": "string"
                    },
                    "subnet": {
                      "description": "Subnet is the subnet to use for control plane cloud resources. This field is immutable. Once set, It can't be changed.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "ID of resource",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "Name of resource",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "vpc": {
                      "description": "VPC specifies IBM Cloud PowerVS Load Balancing configuration for the control plane. This field is immutable. Once set, It can't be changed.",
                      "type": "object",
                      "required": [
                        "name",
                        "region"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name for VPC to used for all the service load balancer. This field is immutable. Once set, It can't be changed.",
                          "type": "string"
                        },
                        "region": {
                          "description": "Region is the IBMCloud region in which VPC gets created, this VPC used for all the ingress traffic into the OCP cluster. This field is immutable. Once set, It can't be changed.",
                          "type": "string"
                        },
                        "subnet": {
                          "description": "Subnet is the subnet to use for load balancer. This field is immutable. Once set, It can't be changed.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "zone": {
                          "description": "Zone is the availability zone where load balancer cloud resources are created. This field is immutable. Once set, It can't be changed.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "zone": {
                      "description": "Zone is the availability zone where control plane cloud resources are created. This field is immutable. Once set, It can't be changed.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "type": {
                  "description": "Type is the type of infrastructure provider for the cluster.",
                  "type": "string",
                  "enum": [
                    "AWS",
                    "None",
                    "IBMCloud",
                    "Agent",
                    "KubeVirt",
                    "Azure",
                    "PowerVS"
                  ]
                }
              },
              "additionalProperties": false
            },
            "pullSecret": {
              "description": "PullSecret references a pull secret to be injected into the container runtime of all cluster nodes. The secret must have a key named \".dockerconfigjson\" whose value is the pull secret JSON.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "release": {
              "description": "Release specifies the desired OCP release payload for the hosted cluster. \n Updating this field will trigger a rollout of the control plane. The behavior of the rollout will be driven by the ControllerAvailabilityPolicy and InfrastructureAvailabilityPolicy.",
              "type": "object",
              "required": [
                "image"
              ],
              "properties": {
                "image": {
                  "description": "Image is the image pullspec of an OCP release payload image.",
                  "type": "string",
                  "pattern": "^(\\w+\\S+)$"
                }
              },
              "additionalProperties": false
            },
            "secretEncryption": {
              "description": "SecretEncryption specifies a Kubernetes secret encryption strategy for the control plane.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "type"
              ],
              "properties": {
                "aescbc": {
                  "description": "AESCBC defines metadata about the AESCBC secret encryption strategy",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "activeKey"
                  ],
                  "properties": {
                    "activeKey": {
                      "description": "ActiveKey defines the active key used to encrypt new secrets",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "backupKey": {
                      "description": "BackupKey defines the old key during the rotation process so previously created secrets can continue to be decrypted until they are all re-encrypted with the active key.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "kms": {
                  "description": "KMS defines metadata about the kms secret encryption strategy",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "provider"
                  ],
                  "properties": {
                    "aws": {
                      "description": "AWS defines metadata about the configuration of the AWS KMS Secret Encryption provider",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "activeKey",
                        "auth",
                        "region"
                      ],
                      "properties": {
                        "activeKey": {
                          "description": "ActiveKey defines the active key used to encrypt new secrets",
                          "type": "object",
                          "required": [
                            "arn"
                          ],
                          "properties": {
                            "arn": {
                              "description": "ARN is the Amazon Resource Name for the encryption key",
                              "type": "string",
                              "pattern": "^arn:"
                            }
                          },
                          "additionalProperties": false
                        },
                        "auth": {
                          "description": "Auth defines metadata about the management of credentials used to interact with AWS KMS",
                          "type": "object",
                          "required": [
                            "credentials"
                          ],
                          "properties": {
                            "credentials": {
                              "description": "Credentials contains the name of the secret that holds the aws credentials that can be used to make the necessary KMS calls. It should at key AWSCredentialsFileSecretKey contain the aws credentials file that can be used to configure AWS SDKs",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "backupKey": {
                          "description": "BackupKey defines the old key during the rotation process so previously created secrets can continue to be decrypted until they are all re-encrypted with the active key.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "arn"
                          ],
                          "properties": {
                            "arn": {
                              "description": "ARN is the Amazon Resource Name for the encryption key",
                              "type": "string",
                              "pattern": "^arn:"
                            }
                          },
                          "additionalProperties": false
                        },
                        "region": {
                          "description": "Region contains the AWS region",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "ibmcloud": {
                      "description": "IBMCloud defines metadata for the IBM Cloud KMS encryption strategy",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "auth",
                        "keyList",
                        "region"
                      ],
                      "properties": {
                        "auth": {
                          "description": "Auth defines metadata for how authentication is done with IBM Cloud KMS",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "managed": {
                              "description": "Managed defines metadata around the service to service authentication strategy for the IBM Cloud KMS system (all provider managed).",
                              "type": [
                                "object",
                                "null"
                              ]
                            },
                            "type": {
                              "description": "Type defines the IBM Cloud KMS authentication strategy",
                              "type": "string",
                              "enum": [
                                "Managed",
                                "Unmanaged"
                              ]
                            },
                            "unmanaged": {
                              "description": "Unmanaged defines the auth metadata the customer provides to interact with IBM Cloud KMS",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "credentials"
                              ],
                              "properties": {
                                "credentials": {
                                  "description": "Credentials should reference a secret with a key field of IBMCloudIAMAPIKeySecretKey that contains a apikey to call IBM Cloud KMS APIs",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "keyList": {
                          "description": "KeyList defines the list of keys used for data encryption",
                          "type": "array",
                          "items": {
                            "description": "IBMCloudKMSKeyEntry defines metadata for an IBM Cloud KMS encryption key",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "correlationID",
                              "crkID",
                              "instanceID",
                              "keyVersion",
                              "url"
                            ],
                            "properties": {
                              "correlationID": {
                                "description": "CorrelationID is an identifier used to track all api call usage from hypershift",
                                "type": "string"
                              },
                              "crkID": {
                                "description": "CRKID is the customer rook key id",
                                "type": "string"
                              },
                              "instanceID": {
                                "description": "InstanceID is the id for the key protect instance",
                                "type": "string"
                              },
                              "keyVersion": {
                                "description": "KeyVersion is a unique number associated with the key. The number increments whenever a new key is enabled for data encryption.",
                                "type": "integer"
                              },
                              "url": {
                                "description": "URL is the url to call key protect apis over",
                                "type": "string",
                                "pattern": "^https://"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "region": {
                          "description": "Region is the IBM Cloud region",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "provider": {
                      "description": "Provider defines the KMS provider",
                      "type": "string",
                      "enum": [
                        "IBMCloud",
                        "AWS"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "type": {
                  "description": "Type defines the type of kube secret encryption being used",
                  "type": "string",
                  "enum": [
                    "kms",
                    "aescbc"
                  ]
                }
              },
              "additionalProperties": false
            },
            "serviceAccountSigningKey": {
              "description": "ServiceAccountSigningKey is a reference to a secret containing the private key used by the service account token issuer. The secret is expected to contain a single key named \"key\". If not specified, a service account signing key will be generated automatically for the cluster. When specifying a service account signing key, a IssuerURL must also be specified.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "services": {
              "description": "Services specifies how individual control plane services are published from the hosting cluster of the control plane. \n If a given service is not present in this list, it will be exposed publicly by default.",
              "type": "array",
              "items": {
                "description": "ServicePublishingStrategyMapping specifies how individual control plane services are published from the hosting cluster of a control plane.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "service",
                  "servicePublishingStrategy"
                ],
                "properties": {
                  "service": {
                    "description": "Service identifies the type of service being published.",
                    "type": "string",
                    "enum": [
                      "APIServer",
                      "OAuthServer",
                      "OIDC",
                      "Konnectivity",
                      "Ignition",
                      "OVNSbDb"
                    ]
                  },
                  "servicePublishingStrategy": {
                    "description": "ServicePublishingStrategy specifies how to publish Service.",
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "loadBalancer": {
                        "description": "LoadBalancer configures exposing a service using a LoadBalancer.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "hostname": {
                            "description": "Hostname is the name of the DNS record that will be created pointing to the LoadBalancer.",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "nodePort": {
                        "description": "NodePort configures exposing a service using a NodePort.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "address"
                        ],
                        "properties": {
                          "address": {
                            "description": "Address is the host/ip that the NodePort service is exposed over.",
                            "type": "string"
                          },
                          "port": {
                            "description": "Port is the port of the NodePort service. If <=0, the port is dynamically assigned when the service is created.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "route": {
                        "description": "Route configures exposing a service using a Route.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "hostname": {
                            "description": "Hostname is the name of the DNS record that will be created pointing to the Route.",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": {
                        "description": "Type is the publishing strategy used for the service.",
                        "type": "string",
                        "enum": [
                          "LoadBalancer",
                          "NodePort",
                          "Route",
                          "None",
                          "S3"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "sshKey": {
              "description": "SSHKey references an SSH key to be injected into all cluster node sshd servers. The secret must have a single key \"id_rsa.pub\" whose value is the public part of an SSH key.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "hostedManagedClusterSet": {
          "description": "HostedManagedClusterSet is the ManagedClusterSet the hosted cluster should belong to. If omitted, the default is the hosting cluster's cluster set",
          "type": [
            "string",
            "null"
          ]
        },
        "hostingCluster": {
          "description": "HostingCluster only applies to ManifestWork, and specifies which managedCluster's namespace the manifestwork will be applied to. If not specified, the controller will flag an error condition. The HostingCluster would be the management cluster of the hostedcluster and nodepool generated by the hypershiftDeployment",
          "type": "string"
        },
        "hostingNamespace": {
          "description": "HostingNamespace specify the where the children resouces(hostedcluster, nodepool) to sit in if not provided, the default is \"clusters\"",
          "type": [
            "string",
            "null"
          ]
        },
        "infra-id": {
          "description": "Infrastructure ID, this is used to tag resources in the Cloud Provider, it will be generated if not provided",
          "type": [
            "string",
            "null"
          ]
        },
        "infrastructure": {
          "description": "Infrastructure instructions and pointers so either ClusterDeployment generates what is needed or skips it when the user provides the infrastructure values",
          "type": "object",
          "required": [
            "configure"
          ],
          "properties": {
            "cloudProvider": {
              "description": "CloudProvider secret, contains the Cloud credenetial, Pull Secret and Base Domain",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "configure": {
              "description": "Configure the infrastructure using the provided CloudProvider, or user provided",
              "type": "boolean"
            },
            "platform": {
              "description": "Region is the AWS region in which the cluster resides. This configures the OCP control plane cloud integrations, and is used by NodePool to resolve the correct boot AMI for a given release.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "aws": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "region"
                  ],
                  "properties": {
                    "region": {
                      "description": "Region is the AWS region in which the cluster resides. This configures the OCP control plane cloud integrations, and is used by NodePool to resolve the correct boot AMI for a given release.",
                      "type": "string"
                    },
                    "zones": {
                      "description": "Zones are availability zones in the AWS region. NodePool resource is created in each zone and the NodePool name is suffixed by the zone name.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "azure": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "location"
                  ],
                  "properties": {
                    "location": {
                      "description": "Region is the Azure region(location) in which the cluster resides. This configures the OCP control plane cloud integrations, and is used by NodePool to resolve the correct boot image for a given release.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "nodePoolReferences": {
          "description": "Reference to an array of NodePool resources on the HyperShift deployment namespace that will be applied to the ManagementCluster by ACM, required if InfraSpec.Configure is false",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "name": {
                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "nodePools": {
          "description": "NodePools is an array of NodePool resources that will be applied to the ManagementCluster by ACM, if omitted, a default NodePool will be generated",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "name",
              "spec"
            ],
            "properties": {
              "name": {
                "description": "Name is the name to give this NodePool",
                "type": "string"
              },
              "spec": {
                "description": "Spec stores the NodePoolSpec you wan to use. If omitted, it will be generated",
                "type": "object",
                "required": [
                  "clusterName",
                  "management",
                  "platform",
                  "release"
                ],
                "properties": {
                  "autoScaling": {
                    "description": "Autoscaling specifies auto-scaling behavior for the NodePool.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "max",
                      "min"
                    ],
                    "properties": {
                      "max": {
                        "description": "Max is the maximum number of nodes allowed in the pool. Must be >= 1.",
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                      },
                      "min": {
                        "description": "Min is the minimum number of nodes to maintain in the pool. Must be >= 1.",
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                      }
                    },
                    "additionalProperties": false
                  },
                  "clusterName": {
                    "description": "ClusterName is the name of the HostedCluster this NodePool belongs to. \n TODO(dan): Should this be a LocalObjectReference?",
                    "type": "string"
                  },
                  "config": {
                    "description": "Config is a list of references to ConfigMaps containing serialized MachineConfig resources to be injected into the ignition configurations of nodes in the NodePool. The MachineConfig API schema is defined here: \n https://github.com/openshift/machine-config-operator/blob/18963e4f8fe66e8c513ca4b131620760a414997f/pkg/apis/machineconfiguration.openshift.io/v1/types.go#L185 \n Each ConfigMap must have a single key named \"config\" whose value is the JSON or YAML of a serialized MachineConfig.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "management": {
                    "description": "Management specifies behavior for managing nodes in the pool, such as upgrade strategies and auto-repair behaviors.",
                    "type": "object",
                    "required": [
                      "upgradeType"
                    ],
                    "properties": {
                      "autoRepair": {
                        "description": "AutoRepair specifies whether health checks should be enabled for machines in the NodePool. The default is false.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "inPlace": {
                        "description": "InPlace is the configuration for in-place upgrades.",
                        "type": [
                          "object",
                          "null"
                        ]
                      },
                      "replace": {
                        "description": "Replace is the configuration for rolling upgrades.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "rollingUpdate": {
                            "description": "RollingUpdate specifies a rolling update strategy which upgrades nodes by creating new nodes and deleting the old ones.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "maxSurge": {
                                "description": "MaxSurge is the maximum number of nodes that can be provisioned above the desired number of nodes. \n Value can be an absolute number (ex: 5) or a percentage of desired nodes (ex: 10%). \n Absolute number is calculated from percentage by rounding up. \n This can not be 0 if MaxUnavailable is 0. \n Defaults to 1. \n Example: when this is set to 30%, new nodes can be provisioned immediately when the rolling update starts, such that the total number of old and new nodes do not exceed 130% of desired nodes. Once old nodes have been deleted, new nodes can be provisioned, ensuring that total number of nodes running at any time during the update is at most 130% of desired nodes.",
                                "x-kubernetes-int-or-string": true
                              },
                              "maxUnavailable": {
                                "description": "MaxUnavailable is the maximum number of nodes that can be unavailable during the update. \n Value can be an absolute number (ex: 5) or a percentage of desired nodes (ex: 10%). \n Absolute number is calculated from percentage by rounding down. \n This can not be 0 if MaxSurge is 0. \n Defaults to 0. \n Example: when this is set to 30%, old nodes can be deleted down to 70% of desired nodes immediately when the rolling update starts. Once new nodes are ready, more old nodes be deleted, followed by provisioning new nodes, ensuring that the total number of nodes available at all times during the update is at least 70% of desired nodes.",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "strategy": {
                            "description": "Strategy is the node replacement strategy for nodes in the pool.",
                            "type": [
                              "string",
                              "null"
                            ],
                            "enum": [
                              "RollingUpdate",
                              "OnDelete"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "upgradeType": {
                        "description": "UpgradeType specifies the type of strategy for handling upgrades.",
                        "type": "string",
                        "enum": [
                          "Replace",
                          "InPlace"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "nodeCount": {
                    "description": "Deprecated: Use Replicas instead. NodeCount will be dropped in the next api release.",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int32"
                  },
                  "nodeDrainTimeout": {
                    "description": "NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout` TODO (alberto): Today changing this field will trigger a recreate rolling update, which kind of defeats the purpose of the change. In future we plan to propagate this field in-place. https://github.com/kubernetes-sigs/cluster-api/issues/5880",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "platform": {
                    "description": "Platform specifies the underlying infrastructure provider for the NodePool and is used to configure platform specific behavior.",
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "agent": {
                        "description": "Agent specifies the configuration used when using Agent platform.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "agentLabelSelector": {
                            "description": "AgentLabelSelector contains labels that must be set on an Agent in order to be selected for a Machine.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                      "type": [
                                        "array",
                                        "null"
                                      ],
                                      "items": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "matchLabels": {
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "additionalProperties": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "aws": {
                        "description": "AWS specifies the configuration used when operating on AWS.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "instanceType"
                        ],
                        "properties": {
                          "ami": {
                            "description": "AMI is the image id to use for node instances. If unspecified, the default is chosen based on the NodePool release payload image.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "instanceProfile": {
                            "description": "InstanceProfile is the AWS EC2 instance profile, which is a container for an IAM role that the EC2 instance uses.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "instanceType": {
                            "description": "InstanceType is an ec2 instance type for node instances (e.g. m5.large).",
                            "type": "string"
                          },
                          "resourceTags": {
                            "description": "ResourceTags is an optional list of additional tags to apply to AWS node instances. \n These will be merged with HostedCluster scoped tags, and HostedCluster tags take precedence in case of conflicts. \n See https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html for information on tagging AWS resources. AWS supports a maximum of 50 tags per resource. OpenShift reserves 25 tags for its use, leaving 25 tags available for the user.",
                            "type": [
                              "array",
                              "null"
                            ],
                            "maxItems": 25,
                            "items": {
                              "description": "AWSResourceTag is a tag to apply to AWS resources created for the cluster.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "key",
                                "value"
                              ],
                              "properties": {
                                "key": {
                                  "description": "Key is the key of the tag.",
                                  "type": "string",
                                  "maxLength": 128,
                                  "minLength": 1,
                                  "pattern": "^[0-9A-Za-z_.:/=+-@]+$"
                                },
                                "value": {
                                  "description": "Value is the value of the tag. \n Some AWS service do not support empty values. Since tags are added to resources in many services, the length of the tag value must meet the requirements of all services.",
                                  "type": "string",
                                  "maxLength": 256,
                                  "minLength": 1,
                                  "pattern": "^[0-9A-Za-z_.:/=+-@]+$"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "rootVolume": {
                            "description": "RootVolume specifies configuration for the root volume of node instances.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "size",
                              "type"
                            ],
                            "properties": {
                              "iops": {
                                "description": "IOPS is the number of IOPS requested for the disk. This is only valid for type io1.",
                                "type": [
                                  "integer",
                                  "null"
                                ],
                                "format": "int64"
                              },
                              "size": {
                                "description": "Size specifies size (in Gi) of the storage device. \n Must be greater than the image snapshot size or 8 (whichever is greater).",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 8
                              },
                              "type": {
                                "description": "Type is the type of the volume.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "securityGroups": {
                            "description": "SecurityGroups is an optional set of security groups to associate with node instances.",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "description": "AWSResourceReference is a reference to a specific AWS resource by ID, ARN, or filters. Only one of ID, ARN or Filters may be specified. Specifying more than one will result in a validation error.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "arn": {
                                  "description": "ARN of resource",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "filters": {
                                  "description": "Filters is a set of key/value pairs used to identify a resource They are applied according to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "description": "Filter is a filter used to identify an AWS resource",
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "required": [
                                      "name",
                                      "values"
                                    ],
                                    "properties": {
                                      "name": {
                                        "description": "Name of the filter. Filter names are case-sensitive.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "Values includes one or more filter values. Filter values are case-sensitive.",
                                        "type": "array",
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "id": {
                                  "description": "ID of resource",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "subnet": {
                            "description": "Subnet is the subnet to use for node instances.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "arn": {
                                "description": "ARN of resource",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "filters": {
                                "description": "Filters is a set of key/value pairs used to identify a resource They are applied according to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "Filter is a filter used to identify an AWS resource",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "name",
                                    "values"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "Name of the filter. Filter names are case-sensitive.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "Values includes one or more filter values. Filter values are case-sensitive.",
                                      "type": "array",
                                      "items": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "id": {
                                "description": "ID of resource",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "azure": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "vmsize"
                        ],
                        "properties": {
                          "availabilityZone": {
                            "description": "AvailabilityZone of the nodepool. Must not be specified for clusters in a location that does not support AvailabilityZone.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "diskSizeGB": {
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32",
                            "minimum": 16
                          },
                          "imageID": {
                            "description": "ImageID is the id of the image to boot from. If unset, the default image at the location below will be used: subscription/$subscriptionID/resourceGroups/$resourceGroupName/providers/Microsoft.Compute/images/rhcos.x86_64.vhd",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "vmsize": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "ibmcloud": {
                        "description": "IBMCloud defines IBMCloud specific settings for components",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "providerType": {
                            "description": "ProviderType is a specific supported infrastructure provider within IBM Cloud.",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "kubevirt": {
                        "description": "Kubevirt specifies the configuration used when operating on KubeVirt platform.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "rootVolume"
                        ],
                        "properties": {
                          "compute": {
                            "description": "Compute contains values representing the virtual hardware requested for the VM",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "cores": {
                                "description": "Cores represents how many cores the guest VM should have",
                                "type": [
                                  "integer",
                                  "null"
                                ],
                                "format": "int32"
                              },
                              "memory": {
                                "description": "Memory represents how much guest memory the VM should have",
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "rootVolume": {
                            "description": "RootVolume represents values associated with the VM volume that will host rhcos",
                            "type": "object",
                            "properties": {
                              "diskImage": {
                                "description": "Image represents what rhcos image to use for the node pool",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "containerDiskImage": {
                                    "description": "ContainerDiskImage is a string representing the container image that holds the root disk",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              "persistent": {
                                "description": "Persistent volume type means the VM's storage is backed by a PVC VMs that use persistent volumes can survive disruption events like restart and eviction This is the default type used when no storage type is defined.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "size": {
                                    "description": "Size is the size of the persistent storage volume",
                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "storageClass": {
                                    "description": "StorageClass is the storageClass used for the underlying PVC that hosts the volume",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              "type": {
                                "description": "Type represents the type of storage to associate with the kubevirt VMs.",
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "enum": [
                                  "Persistent"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "powervs": {
                        "description": "PowerVS specifies the configuration used when using IBMCloud PowerVS platform.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "image": {
                            "description": "Image used for deploying the nodes. If unspecified, the default is chosen based on the NodePool release payload image.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "id": {
                                "description": "ID of resource",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "name": {
                                "description": "Name of resource",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "imageDeletePolicy": {
                            "description": "ImageDeletePolicy is policy for the image deletion. \n delete: delete the image from the infrastructure. retain: delete the image from the openshift but retain in the infrastructure. \n The default is delete",
                            "type": [
                              "string",
                              "null"
                            ],
                            "enum": [
                              "delete",
                              "retain"
                            ]
                          },
                          "memoryGiB": {
                            "description": "MemoryGiB is the size of a virtual machine's memory, in GiB. maximum value for the MemoryGiB depends on the selected SystemType. when SystemType is set to e880 maximum MemoryGiB value is 7463 GiB. when SystemType is set to e980 maximum MemoryGiB value is 15307 GiB. when SystemType is set to s922 maximum MemoryGiB value is 942 GiB. The minimum memory is 32 GiB. \n When omitted, this means the user has no opinion and the platform is left to choose a reasonable default. The current default is 32.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "processorType": {
                            "description": "ProcessorType is the VM instance processor type. It must be set to one of the following values: Dedicated, Capped or Shared. \n Dedicated: resources are allocated for a specific client, The hypervisor makes a 1:1 binding of a partition\u2019s processor to a physical processor core. Shared: Shared among other clients. Capped: Shared, but resources do not expand beyond those that are requested, the amount of CPU time is Capped to the value specified for the entitlement. \n if the processorType is selected as Dedicated, then Processors value cannot be fractional. When omitted, this means that the user has no opinion and the platform is left to choose a reasonable default. The current default is Shared.",
                            "type": [
                              "string",
                              "null"
                            ],
                            "enum": [
                              "dedicated",
                              "shared",
                              "capped"
                            ]
                          },
                          "processors": {
                            "description": "Processors is the number of virtual processors in a virtual machine. when the processorType is selected as Dedicated the processors value cannot be fractional. maximum value for the Processors depends on the selected SystemType. when SystemType is set to e880 or e980 maximum Processors value is 143. when SystemType is set to s922 maximum Processors value is 15. minimum value for Processors depends on the selected ProcessorType. when ProcessorType is set as Shared or Capped, The minimum processors is 0.5. when ProcessorType is set as Dedicated, The minimum processors is 1. When omitted, this means that the user has no opinion and the platform is left to choose a reasonable default. The default is set based on the selected ProcessorType. when ProcessorType selected as Dedicated, the default is set to 1. when ProcessorType selected as Shared or Capped, the default is set to 0.5.",
                            "x-kubernetes-int-or-string": true
                          },
                          "storageType": {
                            "description": "StorageType for the image and nodes, this will be ignored if Image is specified. The storage tiers in PowerVS are based on I/O operations per second (IOPS). It means that the performance of your storage volumes is limited to the maximum number of IOPS based on volume size and storage tier. Although, the exact numbers might change over time, the Tier 3 storage is currently set to 3 IOPS/GB, and the Tier 1 storage is currently set to 10 IOPS/GB. \n The default is tier1",
                            "type": [
                              "string",
                              "null"
                            ],
                            "enum": [
                              "tier1",
                              "tier3"
                            ]
                          },
                          "systemType": {
                            "description": "SystemType is the System type used to host the instance. systemType determines the number of cores and memory that is available. Few of the supported SystemTypes are s922,e880,e980. e880 systemType available only in Dallas Datacenters. e980 systemType available in Datacenters except Dallas and Washington. When omitted, this means that the user has no opinion and the platform is left to choose a reasonable default. The current default is s922 which is generally available.",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": {
                        "description": "Type specifies the platform name.",
                        "type": "string",
                        "enum": [
                          "AWS",
                          "None",
                          "IBMCloud",
                          "Agent",
                          "KubeVirt",
                          "Azure",
                          "PowerVS"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "release": {
                    "description": "Release specifies the OCP release used for the NodePool. This informs the ignition configuration for machines, as well as other platform specific machine properties (e.g. an AMI on the AWS platform).",
                    "type": "object",
                    "required": [
                      "image"
                    ],
                    "properties": {
                      "image": {
                        "description": "Image is the image pullspec of an OCP release payload image.",
                        "type": "string",
                        "pattern": "^(\\w+\\S+)$"
                      }
                    },
                    "additionalProperties": false
                  },
                  "replicas": {
                    "description": "Replicas is the desired number of nodes the pool should maintain. If unset, the default value is 0.",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int32"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "override": {
          "description": "InfrastructureOverride allows support for special cases   OverrideDestroy = \"ORPHAN\"   InfraConfigureOnly = \"INFRA-ONLY\"   DeleteHostingNamespace = \"DELETE-HOSTING-NAMESPACE\"",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "ORPHAN",
            "INFRA-ONLY",
            "DELETE-HOSTING-NAMESPACE"
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "HypershiftDeploymentStatus defines the observed state of HypershiftDeployment",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "Track the conditions for each step in the desired curation that is being executed as a job",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{     // Represents the observations of a foo's current state.     // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     // +patchStrategy=merge     // +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n     // other fields }",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition. This may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "phase": {
          "description": "Show which phase of curation is currently being processed",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "cluster.open-cluster-management.io",
      "kind": "HypershiftDeployment",
      "version": "v1alpha1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}