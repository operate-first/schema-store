{
  "description": "Plotter is the Schema for the plotters API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "app.fybrik.io/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "Plotter"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    },
    "spec": {
      "description": "PlotterSpec defines the desired state of Plotter, which is applied in a multi-clustered environment. Plotter declares what needs to be installed and where (as blueprints running on remote clusters) which provides the Data Scientist's application with secure and governed access to the data requested in the FybrikApplication.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "assets",
        "flows",
        "modulesNamespace",
        "templates"
      ],
      "properties": {
        "appInfo": {
          "description": "Application context to be transferred to the modules",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "appSelector": {
          "description": "Selector enables to connect the resource to the application Application labels should match the labels in the selector. For some flows the selector may not be used.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "workloadSelector"
          ],
          "properties": {
            "clusterName": {
              "description": "Cluster name",
              "type": [
                "string",
                "null"
              ]
            },
            "workloadSelector": {
              "description": "WorkloadSelector enables to connect the resource to the application Application labels should match the labels in the selector.",
              "type": "object",
              "properties": {
                "matchExpressions": {
                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "key",
                      "operator"
                    ],
                    "properties": {
                      "key": {
                        "description": "key is the label key that the selector applies to.",
                        "type": "string"
                      },
                      "operator": {
                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                        "type": "string"
                      },
                      "values": {
                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "matchLabels": {
                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "assets": {
          "description": "Assets is a map holding information about the assets The key is the assetID",
          "type": "object",
          "additionalProperties": {
            "description": "AssetDetails is a list of assets used in the fybrikapplication. In addition to assets declared in fybrikapplication, AssetDetails list also contains assets that are allocated by the control-plane in order to serve fybrikapplication",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "assetDetails"
            ],
            "properties": {
              "advertisedAssetId": {
                "description": "AdvertisedAssetID links this asset to asset from fybrikapplication and is used by user facing services",
                "type": [
                  "string",
                  "null"
                ]
              },
              "assetDetails": {
                "description": "DataStore contains the details for accesing the data that are sent by catalog connectors Credentials for accesing the data are stored in Vault, in the location represented by Vault property.",
                "type": "object",
                "required": [
                  "connection"
                ],
                "properties": {
                  "connection": {
                    "description": "Connection has the relevant details for accesing the data (url, table, ssl, etc.)",
                    "required": [
                      "name"
                    ],
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "format": {
                    "description": "Format represents data format (e.g. parquet) as received from catalog connectors",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "vault": {
                    "description": "Holds details for retrieving credentials by the modules from Vault store. It is a map so that different credentials can be stored for the different DataFlow operations.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {
                      "description": "Holds details for retrieving credentials from Vault store.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "address",
                        "authPath",
                        "role",
                        "secretPath"
                      ],
                      "properties": {
                        "address": {
                          "description": "Address is Vault address",
                          "type": "string"
                        },
                        "authPath": {
                          "description": "AuthPath is the path to auth method i.e. kubernetes",
                          "type": "string"
                        },
                        "role": {
                          "description": "Role is the Vault role used for retrieving the credentials",
                          "type": "string"
                        },
                        "secretPath": {
                          "description": "SecretPath is the path of the secret holding the Credentials in Vault",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "flows": {
          "type": "array",
          "items": {
            "description": "Flows is the list of data flows driven from fybrikapplication: Each element in the list holds the flow of the data requested in fybrikapplication.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "assetId",
              "flowType",
              "name",
              "subFlows"
            ],
            "properties": {
              "assetId": {
                "description": "AssetID indicates the data set being used in this data flow",
                "type": "string"
              },
              "flowType": {
                "description": "Type of the flow (e.g. read)",
                "type": "string",
                "enum": [
                  "read",
                  "write",
                  "delete",
                  "copy"
                ]
              },
              "name": {
                "description": "Name of the flow",
                "type": "string"
              },
              "subFlows": {
                "type": "array",
                "items": {
                  "description": "Subflows is a list of data flows which are originated from the same data asset but are triggered differently (e.g., one upon init trigger and one upon workload trigger)",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "flowType",
                    "name",
                    "steps",
                    "triggers"
                  ],
                  "properties": {
                    "flowType": {
                      "description": "Type of the flow (e.g. read)",
                      "type": "string",
                      "enum": [
                        "read",
                        "write",
                        "delete",
                        "copy"
                      ]
                    },
                    "name": {
                      "description": "Name of the SubFlow",
                      "type": "string"
                    },
                    "steps": {
                      "description": "Steps defines a series of sequential/parallel data flow steps The first dimension represents parallel data flows. The second sequential components within the same parallel data flow.",
                      "type": "array",
                      "items": {
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "DataFlowStep contains details on a single data flow step",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "cluster",
                            "name",
                            "template"
                          ],
                          "properties": {
                            "cluster": {
                              "description": "Name of the cluster this step is executed on",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the step",
                              "type": "string"
                            },
                            "parameters": {
                              "description": "Step parameters TODO why not flatten the parameters into this data flow step",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "action": {
                                  "description": "Actions are the data transformations that the module supports",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "required": [
                                      "name"
                                    ],
                                    "x-kubernetes-preserve-unknown-fields": true
                                  }
                                },
                                "api": {
                                  "description": "ResourceDetails includes asset connection details",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "connection"
                                  ],
                                  "properties": {
                                    "connection": {
                                      "description": "Connection information",
                                      "required": [
                                        "name"
                                      ],
                                      "x-kubernetes-preserve-unknown-fields": true
                                    },
                                    "dataFormat": {
                                      "description": "Data format",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "args": {
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "description": "StepArgument describes a step: it could be assetID or an endpoint of another step",
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "api": {
                                        "description": "API holds information for accessing a module instance",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "required": [
                                          "connection"
                                        ],
                                        "properties": {
                                          "connection": {
                                            "description": "Connection information",
                                            "required": [
                                              "name"
                                            ],
                                            "x-kubernetes-preserve-unknown-fields": true
                                          },
                                          "dataFormat": {
                                            "description": "Data format",
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "assetId": {
                                        "description": "AssetID identifies the source asset of this step",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                }
                              },
                              "additionalProperties": false
                            },
                            "template": {
                              "description": "Template is the name of the template to execute the step The full details of the template can be extracted from Plotter.spec.templates list field.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    },
                    "triggers": {
                      "description": "Triggers",
                      "type": "array",
                      "items": {
                        "description": "SubFlowTrigger indicates the trigger for this subflow",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "workload",
                          "init",
                          "timer"
                        ]
                      }
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "additionalProperties": false
          }
        },
        "modulesNamespace": {
          "description": "ModulesNamespace is the namespace where modules should be allocated",
          "type": "string"
        },
        "templates": {
          "description": "Templates is a map holding the templates used in this plotter steps The key is the template name",
          "type": "object",
          "additionalProperties": {
            "description": "Template contains basic information about the required modules to serve the fybrikapplication e.g., the module helm chart name.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "modules"
            ],
            "properties": {
              "modules": {
                "description": "Modules is a list of dependent modules. e.g., if a plugin module is used then the service module is used in should appear first in the modules list of the same template. If the modules list contains more than one module, the first module in the list is referred to as the \"primary module\" of which all the parameters to this template are sent to.",
                "type": "array",
                "items": {
                  "description": "ModuleInfo is a copy of FybrikModule Custom Resource.  It contains information to instantiate resource of type FybrikModule.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "capability",
                    "chart",
                    "name",
                    "type"
                  ],
                  "properties": {
                    "capability": {
                      "description": "Module capability",
                      "type": "string"
                    },
                    "chart": {
                      "description": "Chart contains the information needed to use helm to install the capability",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "chartPullSecret": {
                          "description": "Name of secret containing helm registry credentials",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "Name of helm chart",
                          "type": "string"
                        },
                        "values": {
                          "description": "Values to pass to helm chart installation",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "name": {
                      "description": "Name of the module",
                      "type": "string"
                    },
                    "scope": {
                      "description": "Scope indicates at what level the capability is used: workload, asset, cluster If not indicated it is assumed to be asset",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "asset",
                        "workload",
                        "cluster"
                      ]
                    },
                    "type": {
                      "description": "May be one of service, config or plugin Service: Means that the control plane deploys the component that performs the capability Config: Another pre-installed service performs the capability and the module deployed configures it for the particular workload or dataset Plugin: Indicates that this module performs a capability as part of another service or module rather than as a stand-alone module",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "name": {
                "description": "Name of the template",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "PlotterStatus defines the observed state of Plotter This includes readiness, error message, and indicators received from blueprint resources owned by the Plotter for cleanup and status monitoring",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "assets": {
          "description": "Assets is a map containing the status per asset. The key of this map is assetId",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "description": "ObservedState represents a part of the generated Blueprint/Plotter resource status that allows update of FybrikApplication status",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "error": {
                "description": "Error indicates that there has been an error to orchestrate the modules and provides the error message",
                "type": [
                  "string",
                  "null"
                ]
              },
              "ready": {
                "description": "Ready represents that the modules have been orchestrated successfully and the data is ready for usage",
                "type": [
                  "boolean",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "blueprints": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "description": "MetaBlueprint defines blueprint metadata (name, namespace) and status",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "name",
              "namespace",
              "status"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "namespace": {
                "type": "string"
              },
              "status": {
                "description": "BlueprintStatus defines the observed state of Blueprint This includes readiness, error message, and indicators for the Kubernetes resources owned by the Blueprint for cleanup and status monitoring",
                "type": "object",
                "properties": {
                  "modules": {
                    "description": "ModulesState is a map which holds the status of each module its key is the moduleInstanceName which is the unique name for the deployed instance related to this workload",
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {
                      "description": "ObservedState represents a part of the generated Blueprint/Plotter resource status that allows update of FybrikApplication status",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "error": {
                          "description": "Error indicates that there has been an error to orchestrate the modules and provides the error message",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "ready": {
                          "description": "Ready represents that the modules have been orchestrated successfully and the data is ready for usage",
                          "type": [
                            "boolean",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "observedGeneration": {
                    "description": "ObservedGeneration is taken from the Blueprint metadata.  This is used to determine during reconcile whether reconcile was called because the desired state changed, or whether status of the allocated resources should be checked.",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64"
                  },
                  "observedState": {
                    "description": "ObservedState includes information to be reported back to the FybrikApplication resource It includes readiness and error indications, as well as user instructions",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "error": {
                        "description": "Error indicates that there has been an error to orchestrate the modules and provides the error message",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "ready": {
                        "description": "Ready represents that the modules have been orchestrated successfully and the data is ready for usage",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "releases": {
                    "description": "Releases map each release to the observed generation of the blueprint containing this release. At the end of reconcile, each release should be mapped to the latest blueprint version or be uninstalled.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int64"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "conditions": {
          "description": "Conditions represent the possible error and failure conditions",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Condition describes the state of a FybrikApplication at a certain point.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "type"
            ],
            "properties": {
              "message": {
                "description": "Message contains the details of the current condition",
                "type": [
                  "string",
                  "null"
                ]
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the version of the resource for which the condition has been evaluated",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "status": {
                "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "Type of the condition",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "flows": {
          "description": "Flows is a map containing the status for each flow the key is the flow name",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "description": "FlowStatus includes information to be reported back to the FybrikApplication resource It holds the status per data flow",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "subFlows"
            ],
            "properties": {
              "status": {
                "description": "ObservedState includes information about the current flow It includes readiness and error indications, as well as user instructions",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "error": {
                    "description": "Error indicates that there has been an error to orchestrate the modules and provides the error message",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "ready": {
                    "description": "Ready represents that the modules have been orchestrated successfully and the data is ready for usage",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              },
              "subFlows": {
                "type": "object",
                "additionalProperties": {
                  "description": "ObservedState represents a part of the generated Blueprint/Plotter resource status that allows update of FybrikApplication status",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "error": {
                      "description": "Error indicates that there has been an error to orchestrate the modules and provides the error message",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "ready": {
                      "description": "Ready represents that the modules have been orchestrated successfully and the data is ready for usage",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "additionalProperties": false
          }
        },
        "observedGeneration": {
          "description": "ObservedGeneration is taken from the Plotter metadata.  This is used to determine during reconcile whether reconcile was called because the desired state changed, or whether status of the allocated blueprints should be checked.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "observedState": {
          "description": "ObservedState includes information to be reported back to the FybrikApplication resource It includes readiness and error indications, as well as user instructions",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "error": {
              "description": "Error indicates that there has been an error to orchestrate the modules and provides the error message",
              "type": [
                "string",
                "null"
              ]
            },
            "ready": {
              "description": "Ready represents that the modules have been orchestrated successfully and the data is ready for usage",
              "type": [
                "boolean",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "readyTimestamp": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "app.fybrik.io",
      "kind": "Plotter",
      "version": "v1beta1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}