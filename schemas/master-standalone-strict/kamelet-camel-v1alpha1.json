{
  "description": "Kamelet is the Schema for the kamelets API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "camel.apache.org/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "Kamelet"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    },
    "spec": {
      "description": "the desired specification",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "authorization": {
          "description": "Deprecated: unused",
          "type": [
            "object",
            "null"
          ]
        },
        "definition": {
          "description": "defines the formal configuration of the Kamelet",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "$schema": {
              "description": "JSONSchemaURL represents a schema url.",
              "type": [
                "string",
                "null"
              ]
            },
            "description": {
              "type": [
                "string",
                "null"
              ]
            },
            "example": {
              "description": "JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "externalDocs": {
              "description": "ExternalDocumentation allows referencing an external resource for extended documentation.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "description": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "url": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "id": {
              "type": [
                "string",
                "null"
              ]
            },
            "properties": {
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "default": {
                    "description": "default is a default value for undefined object fields.",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "description": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "enum": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                      "x-kubernetes-preserve-unknown-fields": true
                    }
                  },
                  "example": {
                    "description": "JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "exclusiveMaximum": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "exclusiveMinimum": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "format": {
                    "description": "format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated: \n - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like \"0321751043\" or \"978-0321751041\" - isbn10: an ISBN10 number string like \"0321751043\" - isbn13: an ISBN13 number string like \"978-0321751041\" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\\\d{3})\\\\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\\\\d{3}[- ]?\\\\d{2}[- ]?\\\\d{4}$ - hexcolor: an hexadecimal color code like \"#FFFFFF\" following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like \"rgb(255,255,255)\" - byte: base64 encoded binary data - password: any kind of string - date: a date string like \"2006-01-02\" as defined by full-date in RFC3339 - duration: a duration string like \"22 ns\" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like \"2014-12-15T19:30:20.000Z\" as defined by date-time in RFC3339.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "maxItems": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64"
                  },
                  "maxLength": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64"
                  },
                  "maxProperties": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64"
                  },
                  "maximum": {
                    "description": "A Number represents a JSON number literal.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "minItems": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64"
                  },
                  "minLength": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64"
                  },
                  "minProperties": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64"
                  },
                  "minimum": {
                    "description": "A Number represents a JSON number literal.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "multipleOf": {
                    "description": "A Number represents a JSON number literal.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "nullable": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "pattern": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "title": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "type": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "uniqueItems": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "x-descriptors": {
                    "description": "XDescriptors is a list of extended properties that trigger a custom behavior in external systems",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "required": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": "string"
              }
            },
            "title": {
              "type": [
                "string",
                "null"
              ]
            },
            "type": {
              "type": [
                "string",
                "null"
              ]
            },
            "additionalProperties": false
          },
          "additionalProperties": false
        },
        "dependencies": {
          "description": "Camel dependencies needed by the Kamelet",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "flow": {
          "description": "Deprecated: use Template instead the main source in YAML DSL",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "sources": {
          "description": "sources in any Camel DSL supported",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "SourceSpec defines the configuration for one or more routes to be executed in a certain Camel DSL language",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "compression": {
                "description": "if the content is compressed (base64 encrypted)",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "content": {
                "description": "the source code (plain text)",
                "type": [
                  "string",
                  "null"
                ]
              },
              "contentKey": {
                "description": "the confimap key holding the source content",
                "type": [
                  "string",
                  "null"
                ]
              },
              "contentRef": {
                "description": "the confimap reference holding the source content",
                "type": [
                  "string",
                  "null"
                ]
              },
              "contentType": {
                "description": "the content type (tipically text or binary)",
                "type": [
                  "string",
                  "null"
                ]
              },
              "interceptors": {
                "description": "Interceptors are optional identifiers the org.apache.camel.k.RoutesLoader uses to pre/post process sources",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "language": {
                "description": "specify which is the language (Camel DSL) used to interpret this source code",
                "type": [
                  "string",
                  "null"
                ]
              },
              "loader": {
                "description": "Loader is an optional id of the org.apache.camel.k.RoutesLoader that will interpret this source at runtime",
                "type": [
                  "string",
                  "null"
                ]
              },
              "name": {
                "description": "the name of the specification",
                "type": [
                  "string",
                  "null"
                ]
              },
              "path": {
                "description": "the path where the file is stored",
                "type": [
                  "string",
                  "null"
                ]
              },
              "property-names": {
                "description": "List of property names defined in the source (e.g. if type is \"template\")",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "rawContent": {
                "description": "the source code (binary)",
                "type": [
                  "string",
                  "null"
                ],
                "format": "byte"
              },
              "type": {
                "description": "Type defines the kind of source described by this object",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "template": {
          "description": "the main source in YAML DSL",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "types": {
          "description": "data specification types for the events consumed/produced by the Kamelet",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "description": "EventTypeSpec represents a specification for an event type",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "mediaType": {
                "description": "media type as expected for HTTP media types (ie, application/json)",
                "type": [
                  "string",
                  "null"
                ]
              },
              "schema": {
                "description": "the expected schema for the event",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "$schema": {
                    "description": "JSONSchemaURL represents a schema url.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "description": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "example": {
                    "description": "JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "externalDocs": {
                    "description": "ExternalDocumentation allows referencing an external resource for extended documentation.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "description": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "url": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "properties": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "default": {
                          "description": "default is a default value for undefined object fields.",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "description": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "enum": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "description": "JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                            "x-kubernetes-preserve-unknown-fields": true
                          }
                        },
                        "example": {
                          "description": "JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "exclusiveMaximum": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "exclusiveMinimum": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "format": {
                          "description": "format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated: \n - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like \"0321751043\" or \"978-0321751041\" - isbn10: an ISBN10 number string like \"0321751043\" - isbn13: an ISBN13 number string like \"978-0321751041\" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\\\d{3})\\\\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\\\\d{3}[- ]?\\\\d{2}[- ]?\\\\d{4}$ - hexcolor: an hexadecimal color code like \"#FFFFFF\" following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like \"rgb(255,255,255)\" - byte: base64 encoded binary data - password: any kind of string - date: a date string like \"2006-01-02\" as defined by full-date in RFC3339 - duration: a duration string like \"22 ns\" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like \"2014-12-15T19:30:20.000Z\" as defined by date-time in RFC3339.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "id": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "maxItems": {
                          "type": [
                            "integer",
                            "null"
                          ],
                          "format": "int64"
                        },
                        "maxLength": {
                          "type": [
                            "integer",
                            "null"
                          ],
                          "format": "int64"
                        },
                        "maxProperties": {
                          "type": [
                            "integer",
                            "null"
                          ],
                          "format": "int64"
                        },
                        "maximum": {
                          "description": "A Number represents a JSON number literal.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "minItems": {
                          "type": [
                            "integer",
                            "null"
                          ],
                          "format": "int64"
                        },
                        "minLength": {
                          "type": [
                            "integer",
                            "null"
                          ],
                          "format": "int64"
                        },
                        "minProperties": {
                          "type": [
                            "integer",
                            "null"
                          ],
                          "format": "int64"
                        },
                        "minimum": {
                          "description": "A Number represents a JSON number literal.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "multipleOf": {
                          "description": "A Number represents a JSON number literal.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "nullable": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "pattern": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "title": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "type": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "uniqueItems": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "x-descriptors": {
                          "description": "XDescriptors is a list of extended properties that trigger a custom behavior in external systems",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "required": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "title": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "type": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "additionalProperties": false
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "the actual status of the resource",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions --",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "KameletCondition describes the state of a resource at a certain point.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "lastUpdateTime": {
                "description": "The last time this condition was updated.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "message": {
                "description": "A human-readable message indicating details about the transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of kamelet condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the most recent generation observed for this Kamelet.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "phase": {
          "description": "Phase --",
          "type": [
            "string",
            "null"
          ]
        },
        "properties": {
          "description": "Properties --",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "KameletProperty specify the behavior of a property in a Kamelet",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "default": {
                "description": "the default value of the property (if any)",
                "type": [
                  "string",
                  "null"
                ]
              },
              "name": {
                "description": "the name of the property",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "camel.apache.org",
      "kind": "Kamelet",
      "version": "v1alpha1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}