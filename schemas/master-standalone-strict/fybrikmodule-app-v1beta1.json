{
  "description": "FybrikModule is a description of an injectable component. the parameters it requires, as well as the specification of how to instantiate such a component. It is used as metadata only.  There is no status nor reconciliation.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "app.fybrik.io/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "FybrikModule"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    },
    "spec": {
      "description": "FybrikModuleSpec contains the info common to all modules, which are one of the components that process, load, write, audit, monitor the data used by the data scientist's application.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "capabilities",
        "chart",
        "type"
      ],
      "properties": {
        "capabilities": {
          "description": "Capabilities declares what this module knows how to do and the types of data it knows how to handle The key to the map is a CapabilityType string",
          "type": "array",
          "items": {
            "description": "Capability declares what this module knows how to do and the types of data it knows how to handle",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "capability"
            ],
            "properties": {
              "actions": {
                "description": "Actions are the data transformations that the module supports",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Unique name of an action supported by the module",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "api": {
                "description": "API indicates to the application how to access the capabilities provided by the module",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "connection"
                ],
                "properties": {
                  "connection": {
                    "description": "Connection information",
                    "required": [
                      "name"
                    ],
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "dataFormat": {
                    "description": "Data format",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              },
              "capability": {
                "description": "Capability declares what this module knows how to do - ex: read, write, transform...",
                "type": "string"
              },
              "plugins": {
                "description": "Plugins enable the module to add libraries to perform actions rather than implementing them by itself",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "dataFormat",
                    "pluginType"
                  ],
                  "properties": {
                    "dataFormat": {
                      "description": "DataFormat indicates the format of data the plugin knows how to process",
                      "type": "string"
                    },
                    "pluginType": {
                      "description": "PluginType indicates the technology used for the module and the plugin to interact The values supported should come from the module taxonomy Examples of such mechanisms are vault plugins, wasm, etc",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "scope": {
                "description": "Scope indicates at what level the capability is used: workload, asset, cluster If not indicated it is assumed to be asset",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "asset",
                  "workload",
                  "cluster"
                ]
              },
              "supportedInterfaces": {
                "description": "Copy should have one or more instances in the list, and its content should have source and sink Read should have one or more instances in the list, each with source populated Write should have one or more instances in the list, each with sink populated This field may not be required if not handling data",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "ModuleInOut specifies the protocol and format of the data input and output by the module - if any",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "sink": {
                      "description": "Sink specifies the output data protocol and format",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "protocol"
                      ],
                      "properties": {
                        "dataformat": {
                          "description": "DataFormat defines the data format type",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "protocol": {
                          "description": "Protocol defines the interface protocol used for data transactions",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "source": {
                      "description": "Source specifies the input data protocol and format",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "protocol"
                      ],
                      "properties": {
                        "dataformat": {
                          "description": "DataFormat defines the data format type",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "protocol": {
                          "description": "Protocol defines the interface protocol used for data transactions",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "additionalProperties": false
          }
        },
        "chart": {
          "description": "Reference to a Helm chart that allows deployment of the resources required for this module",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "chartPullSecret": {
              "description": "Name of secret containing helm registry credentials",
              "type": [
                "string",
                "null"
              ]
            },
            "name": {
              "description": "Name of helm chart",
              "type": "string"
            },
            "values": {
              "description": "Values to pass to helm chart installation",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "additionalProperties": false
        },
        "dependencies": {
          "description": "Other components that must be installed in order for this module to work",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Dependency details another component on which this module relies - i.e. a pre-requisit",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "name",
              "type"
            ],
            "properties": {
              "name": {
                "description": "Name is the name of the dependent component",
                "type": "string"
              },
              "type": {
                "description": "Type provides information used in determining how to instantiate the component",
                "type": "string",
                "enum": [
                  "module",
                  "connector",
                  "feature"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "description": {
          "description": "An explanation of what this module does",
          "type": [
            "string",
            "null"
          ]
        },
        "pluginType": {
          "description": "Plugin type indicates the plugin technology used to invoke the capabilities Ex: vault, fybrik-wasm... Should be provided if type is plugin",
          "type": [
            "string",
            "null"
          ]
        },
        "statusIndicators": {
          "description": "StatusIndicators allow to check status of a non-standard resource that can not be computed by helm/kstatus",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "ResourceStatusIndicator is used to determine the status of an orchestrated resource",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "kind",
              "successCondition"
            ],
            "properties": {
              "errorMessage": {
                "description": "ErrorMessage specifies the resource field to check for an error, e.g. status.errorMsg",
                "type": [
                  "string",
                  "null"
                ]
              },
              "failureCondition": {
                "description": "FailureCondition specifies a condition that indicates the resource failure It uses kubernetes label selection syntax (https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)",
                "type": [
                  "string",
                  "null"
                ]
              },
              "kind": {
                "description": "Kind provides information about the resource kind",
                "type": "string"
              },
              "successCondition": {
                "description": "SuccessCondition specifies a condition that indicates that the resource is ready It uses kubernetes label selection syntax (https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "type": {
          "description": "May be one of service, config or plugin Service: Means that the control plane deploys the component that performs the capability Config: Another pre-installed service performs the capability and the module deployed configures it for the particular workload or dataset Plugin: Indicates that this module performs a capability as part of another service or module rather than as a stand-alone module",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "FybrikModuleStatus defines the observed state of FybrikModule.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions indicate the module states with respect to validation",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Condition describes the state of a FybrikApplication at a certain point.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "type"
            ],
            "properties": {
              "message": {
                "description": "Message contains the details of the current condition",
                "type": [
                  "string",
                  "null"
                ]
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the version of the resource for which the condition has been evaluated",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "status": {
                "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "Type of the condition",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "app.fybrik.io",
      "kind": "FybrikModule",
      "version": "v1beta1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}